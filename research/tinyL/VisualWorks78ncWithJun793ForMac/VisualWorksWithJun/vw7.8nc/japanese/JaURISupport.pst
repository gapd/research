<?xml version="1.0"?><st-source><!-- Name: JaURISupportNotice: Copyright © 2010-1999 Cincom Systems, Inc.  All Rights Reserved.Comment: This parcel supports the localization of the URISupport for Japanese.DbIdentifier: bear73DbTrace: 289772HideSource: falsePackageName: JaURISupportParcel: #('JaURISupport')ParcelName: JaURISupportPrintStringCache: (7.3.1 1.2,trobinson)SaveSource: trueVersion: 7.3.1 1.2Date: 10:58:27 AM June 11, 2010 --><time-stamp>From VisualWorks®, Pre-Release 7.7.1 (jun10.5) of June 11, 2010 on June 11, 2010 at 10:58:27 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>OS.URI class</class-id> <category>encoding/decoding</category><body package="JaURISupport" selector="decodeChar:from:to:">decodeChar: character from: stream to: outputStream	| n |	n := 0.	(character = $%) ifTrue:		[| c1 | 		c1 := ByteArray with: (SmallInteger readFrom: (stream next: 2) readStream radix: 16).		[(n := (c1 withEncoding: #'UTF-8') readStream next) == nil]			whileTrue:				[(n := stream next) = $%					ifTrue: [ c1 :=  c1 copyWith: (SmallInteger								readFrom: (stream next: 2) readStream radix: 16)]					ifFalse: [ c1 :=  c1 copyWith: n asInteger]].			outputStream nextPut: n]		ifFalse: [outputStream nextPut: character]</body><body package="JaURISupport" selector="encode:on:allowed:">encode: aString  on: stream allowed: allowed	| hex ch |	hex := '01234567890abcdefABCDEF'.	1 to: aString size	  do: [:ind |		ch := aString at: ind.		((self shouldEncode: ch allowed: allowed)			and: [ (ch =$% and: [ ind + 2 &gt; aString size])				or: [	(ch = $% and: [(hex includes: (aString at: ind + 1))						and: [(hex includes: (aString at: ind + 2))]]) not]])			ifTrue: 				[| bytes |					bytes := (String with: ch ) asByteArrayEncoding: #'UTF-8'.					bytes do: [ :byte |						stream nextPut: $%.						byte printOn: stream paddedWith: $0 to: 2 base: 16]]			ifFalse: [stream nextPut: ch]].</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it></st-source>