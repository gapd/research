<?xml version="1.0"?><st-source><!-- Name: CollectionDependentsBackwardCompatibilityNotice: Copyright © 2010-1999 Cincom Systems, Inc.  All Rights Reserved.Comment: By default we don't allow collections to have an event table, as the system collections do not signal any, and it becomes a major bottleneck and potential source of deadlock accessing the global EventHandlers when collections grow. If a subclass wants to signal events, it should implement local storage for them and the myEventTable/myEventTable: methods.  This parcel restores the previous behaviour. Note that this can have significant effects on system performance and stability.DbIdentifier: bear73DbTrace: 287658PackageName: CollectionDependentsBackwardCompatibilityParcel: #('CollectionDependentsBackwardCompatibility')PrintStringCache: (7.7.1 - 1,trobinson)Version: 7.7.1 - 1Date: 9:41:01 AM June 4, 2010 --><time-stamp>From VisualWorks®, Pre-Release 7.7.1 (jun10.2) of June 4, 2010 on June 4, 2010 at 9:41:01 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><methods><class-id>Core.Collection</class-id> <category>private</category><body package="CollectionDependentsBackwardCompatibility" selector="myDependents">myDependents	"Answer the receiver's dependents or nil."	^DependentsFields at: self ifAbsent: [nil]</body><body package="CollectionDependentsBackwardCompatibility" selector="myDependents:">myDependents: dependentsOrNil	"Set the receiver's dependents to aDependentsCollection"	dependentsOrNil == nil		ifTrue: [DependentsFields removeKey: self ifAbsent: []]		ifFalse: [DependentsFields at: self put: dependentsOrNil]</body><body package="CollectionDependentsBackwardCompatibility" selector="myEventTable">myEventTable	"Private - answer a Dictionary mapping event names to actions	for the receiver, or nil if there is none."	^EventHandlers at: self ifAbsent: nil</body><body package="CollectionDependentsBackwardCompatibility" selector="myEventTable:">myEventTable: newTable	"Private - answer a Dictionary mapping event names to actions	for the receiver, or nil if there is none."	newTable == nil		ifTrue: [EventHandlers removeKey: self ifAbsent: nil]		ifFalse: [EventHandlers at: self put: newTable]</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Collection</name><environment>Core</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Collections-Abstract</category><attributes><package>Collections-Abstract</package></attributes></class></st-source>