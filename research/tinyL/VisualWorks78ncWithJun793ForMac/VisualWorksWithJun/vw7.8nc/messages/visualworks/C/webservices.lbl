encoding: #UTF_8catalog: #webservicesAccept = 'Accept'AccessPoint = 'Access Point'AccessURL = 'Access URL'AccessURLIsEmpty = 'Access URL is empty!'Add = 'Add'addAllFrom = 'Add all from...'addClass = 'Add class...'AddDomainTypeDescription = 'Add domain type description'AddDomainTypeDescriptionHelp = 'The page allows to import XML to object bindings. The bindings should describe complex types that will be used as parameters in Web Services operations, faults and headers'AddFault = 'Add Fault'AddFaultDot = 'Add Fault...'AddHeader = 'Add Header...'AddInputSoapHeader = 'Add Input Soap Header'AddOutputSoapHeader = 'Add Output Soap Header'AddSuperclassTypesWithTypes = 'Add the super class type only if it has type description'Advandec = 'Advanced...'AllowDerivedTypes = 'Allow marshaling derived types in relations'AllowDerivedTypesHelpText = 'Setting this option to on will allow marshaling derived objects when a type is described with a superclass marshaler. The default option is false. An example:<object name="customer" ..><element name="address" ref="Address"/></object>The "Address" type  is supeclass for USAddress and UKAddress classes. Setting the option to on will allow using instances of USAddress and UKAddress to provide value for the address type and unmarshaling will return instances of USAddress or UKAddress. The option default is false and requires providing the instance of the Address class as a value and unmarshaling will return instances of the Address class.'AlwaysUseSuperclassType = 'Always add the super class type'anyType = 'AnyType'Aspect = 'Aspect'AttributeFormDefaultC = 'Default Attribute Form:'back = '< Back'BadRequest = 'Bad Request'BeforeUsingScriptAddCorrectImplementation = '"Before using this script, add correct implementation code to the service classes.'BindingClasses = 'Binding Classes'BindingComponentSpecifiesOperationWithoutInterface1s = 'The binding component <1s> specifies operation/fault specific binding details but the interface component is not specified.'BindingDoesnotDefineTransportProtocol1s = 'The binding doesn''t define the transport protocol'BindingDoesnotDefineTransportType1s = 'The binding doesn''t define the transport type'BindingHasNoEndPoint = 'The binding has no end point address'BindingIsNotDefinedToSetOption = 'Binding is not defined to set the option'BindingKey = 'Binding Key'Bindings = 'Bindings'BindingTool = 'Binding Tool'BindingType = 'Binding type'BindingTypeHelpText = 'Specifies the binding type for a WSDL schema. Currently, the only supported type is "soap" 'BindXMLType = 'Bind  XML Types to 'Browse = 'Browse...'BrowseFile = 'Browse file...'BrowseObjectMarshalersHelp = 'The classes in the list represent complex data types used in XML Schema and XML To Object Binding specifications. This page allows you to add or update attribute type descriptions for the complex types.An empty circle symbol means that the class has unresolved types or this class doesn''t have attributes. A half empty circle symbol means that the class has partially resolved types.Buttons:Description - Opens a dialog for adding XML type descriptions. Add super class - Adds a superclass of the selected complex type, including the superclass as a complex type in the XML schema description. The selected complex type will have an extension element with the  superclass as its base attribute.Drop super class - Excludes the superclass of the selected type.	Add class - Adds a class to the XML schema complex types.Add all from - Adds all classes from the specified package to the XML shema complex typesDrop classes - Removes selected classes from the XML schema complex types.Settings - Allows XML to Object Binding and XML schema attributes to be set'BusinessKey = 'Business Key'BusinessLocation1 = 'Business location'BusinessName = 'Business Name'BusinessName1 = 'Business name'BusinessServices = 'Business Services'ByteTypeInWrongRange = ' "xsd:byte" type decoded from: <1s> is in a wrong range 'Cancel = 'Cancel'CannotCreateMarshalerFor1s = 'Can not create marshaler for: <1s>'CanNotEncodeNumber = 'Can not encode the number as XML decimal'CannotFindMarshalerForUnionType = 'Can not find marshaler for union type'CannotFindNamespaceForQualifier = 'Can not find namespace for: <1s>'CannotGetResourceFromPartialURL = 'Can not get resource from PartialURL. The parser has #baseURI as nil'CanNotParseBodyContents = 'Can not parse body contents'CanNotParseSimpleContent = 'Can not parse simple content'CanNotParseTheNode = 'Can not parse the node: <1s>'CanNotProcessComplexContent1s = 'Can not process complexContent <1s>. Expected nodes: (restriction | extension) 'CannotResolveClassReference1s = 'Can not resolve class reference from the string: <1s>'CannotResolveImports = 'Cannot resolve schema imports'CanNotResolveInterfaceMessageElement = 'Can not resolve interface message element: <1s>'CannotResolveMessage1s = 'Can not resolve message: <1s>'CanNotResolveOperationFaultMessage1s = 'Cannot resolve the operation <1s>  fault message <2s>'CanNotResolveOperationInputMessage1s = 'Cannot resolve the operation <1s>  input message <2s>'CanNotResolveOperationOutputMessage1s = 'Cannot resolve the operation <1s>  output message <2s>'CannotResolvePartReference = 'Can not find marshaler for <1s>. 'CannotResolveRefToId = 'Can not resolve reference to id:  <1s>'CanNotResolveSimpleType = 'Can not resolve simple type: <1s>'CannotResolveSoapHeaderFaultParts = 'Can not resolve Soap header fault parts'CannotResolveSoapHeaderParts = 'Can not resolve Soap header parts'CanNotResolveURI = 'Can not resolve URI'CanNotSetAspect = 'Can not set aspect'CannotUnmarshalUnionType = 'Can not unmarshal union type <1s>'CanntEncodeBase64Value = 'Can not encode: <1s> into "xsd:base64Binary" 'CanntEncodeByteType = 'Can not encode: <1s> into "xsd:byte".  Wrong range'CanntEncodeLong = 'Can not encode: <1s> into "xsd:long". Wrong range 'CanntEncodeNegativeInteger = 'Can not encode: <1s> into "xsd:negativeInteger" type. Wrong range 'CanntEncodeNonNegativeInteger = 'Can not encode: <1s> into "xsd:nonNegativeInteger".  Wrong range 'CanntEncodeNonPositiveInteger = 'Can not encode: <1s> into "xsd:nonPositiveInteger". Wrong range 'CanntEncodePositiveInteger = 'Can not encode: <1s> into "xsd:positiveInteger".  Wrong range 'CanntEncodeShort = 'Can not encode: <1s> into: "xsd:short". Wrong range 'CanntEncodeUnsignedByteType = 'Can not encode: <1s> into "xsd:unsignedByte". Wrong range 'CanntEncodeUnsignedInt = 'Can not encode: <1s> into "xsd:unsignedInt". Wrong range 'CanntEncodeUnsignedLong = 'Can not encode: ,1s> into "xsd:unsignedLong". Wrong range 'CanntEncodeUnsignedShort = 'Can not encode: <1s> into "xsd:unsignedShort". Wrong range 'CanntEncodeValue = 'Can not encode: <1s> expected class: <2s>'CanntEncodeXsdInt = 'Can not encode: <1s> into "xsd:int". Wrong range 'CantDecodeBooleanString = 'Can not decode "xsd:boolean" from: <1s>'CantDecodeDate = 'Can not decode Date from: <1s>'CantDecodeHexBinary = 'Can not decode "xsd:hexBinary" from: <1s>'CantDecodeNumberFrom = 'Can not decode "xsd:<1s>"  from: <2s>'CantDecodeTime = 'Can not decode Time from: <1s> 'CantDecodeURI = 'Can not decode URI from: <1s> 'CantDecodeXsdBase64 = 'Can not decode "xsd:base64Binary" from: <1s> 'CantDetectMarshalerInXMLObjectBinding = 'Can not detect marshaler in XMLObjectBinding>>detect:'CantDetectSuperMarshaler = 'Can not detect super marshaler'CantFindArrayInElement = 'Can not find array type in the element: <1s>'CantFindMarshalerFor = 'Can not find marshaler for <1s>'CantResolveKeyReference = 'Can''t resolve key reference'ChoiceOf = 'choice: 'ChoiceType = 'Choice type...'Class = 'Class: 'ClassAccessorHasUnderscores = 'If a schema element name has underscores:'Classes = 'Classes'ClassesBuilderSettings = 'Classes Builder Settings'ClassNameIsNotSpecified = 'Class name is not specified'ClientClass = 'Client class'ClientClassExistExc = 'Error creating client class: <1s>. The class exists.'ClientClassExistsInSystemDoYouWantToUse = 'The client class <1s> is already in the system. Do you still want to use this name?'ClientClassNoPortExc = 'Error creating client class: <1s>. The wsdl schema doesn''t have a server url.'Close = 'Close'Collection = '[collection:<1s>]'Collection1 = 'Collection'CollectionType = 'Collection type'CollectionTypeDotDotDot = 'Collection type...'ComplexType = 'Complex Type'ComplextypeDots = 'Complex type...'ComplexTypes = 'Complex Types'ConnectTo = 'Connect to'Contactdetails = 'Contact details'ContactDetails = 'Contact Details'Contacts = 'Contacts'Create = 'Create 'CreateApplicationFromWSDL = 'Create an application from a WSDL schema'CreateBindingClassesDialogHelp = 'The Create Binding classes dialog displays classes that will be generated from the XML to Object Binding specification. You can see the specificafion if you press "View X2O..." button.The left list column shows list of suggested class names as they are specified by the "smalltalkClass" attribute in the binding specification.The right list column allows to change the suggested class names.If there are the classes with number suffixes it indicates that these classes have duplicated bindings in the namespace specified by settings'CreateBindingForSchema = 'Create XML to object binding for schema data type'createBindingForSchemaHelpText = 'This option defines whether or not to create XML to object binding for schema data types. If this option is on the schema serializer will create, load and add the binding to a marshaling manager. By default the BindingBuilder class>>schemaParser creates default (to a dictionary) binding for XML complex types. The BindingBuilder class>>schemaParser can be set to create XML to object binding. This option can help to unmarshal DiffGram format (http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpcondiffgrams.asp)'CreateNewWebServices = 'Build new Web Services'CreateServerNamed = 'Create server named:'CreateServiceClasses = 'Create service classes'CreateXMLSchemaHelp = 'Create XML Schema specification Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'CreatingXMLToObjectBindingError = 'Creating XML to object binding error: <1s>'DecodingAnyType = ' decoding anyType <1s>'Default1ClassNamespaceHelpText = 'The name space in which all classes that are generated from a WSDL schema are placed, by default. While generating a Wsdl schema the types are resolved in this name space 'defaultCategory = 'Default category'defaultCategoryHelpText = 'The category in which all classes that are generated from a WSDL schema are placed, by default.'DefaultClassNamespace = 'Default class namespace'DefaultClassNamespaceC = 'Default class namespace:'defaultDefaultProxyClientHelpText = 'The port number will be used in  #port method when the proxy client is created'DefaultOperationStyle = 'Default operation style'DefaultPackage = 'Default package'DefaultPackageHelpText = 'The package in which all classes that are generated from a WSDL schema are placed, by default. If the package name does not exist in the system, it will be created. 'defaultProxyClientPort = 'Default proxy client port'defaultServiceProtocol = 'Default service protocol'defaultServiceProtocolHelpText = 'The protocol (class category) in which all web service interface stub methods are created, by default. While generating a Wsdl shema the methods from this protocol are used to create Wsdl operations'DefaultTargetNamespace = 'Default target namespace'DefaultTargetNamespaceHelpText = 'The URN for the default namespace of the service being defined by the target WSDL schema.'DescribeComplexTypes = 'Describe complex types'DescribeFaultsTabHelp = 'Faults page allows you to add or remove Faults from an operation or Soap Headers for Wsdl 1.1.	Add fault button allows to add a fault. The Add Fault dialog will display only classes that are derived from the Exception class. These fauls will be used to describe operations in the operations tab Description dialog. For Wsdl 2.0 these faults will be included in interface faults.To remove a fault select it and press Remove fault button. The fault will be removed from all operations.'DescribeInterface = 'Describe Interface'DescribeInterfaceOperations = 'Describe Interface operations'DescribeInterfaceOperationsTabHelp = 'Operations page allows you to select the class that will provide a service, and specify its interfaces. Interfaces must be in a single protocol (default: ''public api'') but may include interfaces from superclasses.	Service class - Click Select... to select the class that provides the service. In the dialog that is opened, you can either enter the class name or select the class by browsing packages or namespaces.Use methods in protocol - The wizard will represent the operations in one protocol as the access API for the service. The default protocol is "public api". You may select a different protocol from the drop-down list. Including super class - The access API can include superclass methods as well. To do so, select the superclass up to which methods are to be included.When the class and protocol are selected, a list of operations is displayed. To describe an operation click on Description... To review the method''s source, click Source... If your interfaces are going to use interface Fault''s or Soap Headers you need to provide this information first before you start describing an operation. Use Faults and Soap Headers tabs to add Fault and Soap Header description'DescribeSoapHeadersTabHelp = 'Soap Headers page allows you to add or remove Soap Headers to Wsdl schema binding.Add Header button allows to add a Soap Header to the binding. These headers will be used to describe operations in Descriptions... For Wsdl 1.1 you can add header faults. To add or remove Header Fault use  Add Fault.. and Remove FaultRemove Header button allows to remove a Soap Header. The header will be removed from all operations also.'Description = 'Description'Description1 = 'Description...'DescriptionFor = 'Description for:'Destination = 'Destination'DetectedMoreThanOneHeaderEntry = 'Detected more than one header entry:  <1s>'DetectedWrongObject = 'Detected a wrong object. Sending <1s> to <2s>'Dictionaries = 'Dictionaries'document = 'document'documentation = 'Documentation'DontUsePart1InSelector = 'Don''t use the first message part'dropClasses = 'Drop classes'DuplicateBindingsFoundFor1sFrom2s = 'Duplicate bindings have been found for "<1s>" from <2s>. The classes won''t be created if the exception proceeds. New classes will be created in <2s> if the exception resumes with #createAll parameter'DuplicateKey = 'Duplicate key <1s>'ElementFormDefaultC = 'Default Element Form:'EmptyBusinessName = 'Empty business name!'encoded = 'encoded'EncodingAnyType = ' encoding anyType <1s>'ErrorParsingXMLDoc = 'Error parsing XML document: <1s>'ExpectArrayTypeRef = 'Expect array type ref'ExpectAttributeNode = 'Expect attribute node'ExpectedInstanceOf1sReceivedNil = 'Expected instance of: <1s>  at: <2s>. Received nil.'ExpectedNotEmptyCollectionAt1s = 'Expected not empty collection at: <1s>'ExpectedTypeOfObjectMarshalerOrSimpleTypeMarshaler = 'Expected type of ObjectMarshaler or SimpleTypeMarshaler'ExpectedTypeOfRelationMarshaler = 'Expected type of RelationMarshaler'ExpectXMLNode = 'Expect XML node'ExposeApplicationAsService = 'Expose an application as a web service'FailedToUnmarshalForwardRef = 'Failed to unmarshal (forward reference?)'Fileout = 'File out'FindBusiness = 'Business Details'FinishingWebServicesWizard = 'Finishing the Web Services Wizard'ForDetailsReferToWSGuide = 'For examples, please refer to the Web Services Demo."'FromApplicationHelpText = 'This option helps you to 	Build new Web Services		describe web services interfaces,		describe types for interface parameters,		create a server class,		create a client class,		test client-server communication,		create a WSDL schema	Update existing WebServices'FromWSDLSchemaHelpText = 'This option helps you to 	load a WSDL schema,	create Smalltalk classes from XML schema complex types,	create client classes,	create an server and service classes,	invoke web service requests.'Generate = 'Generate'GenerateClass = 'Generate class'GenerateClasses = 'Generate Classes'GenerateClassesFromX2O = 'Generate classes from XML to object binding:'GenerateOpentalkClientClass = 'Generate Opentalk client class'GenerateOpentalkProxyClientHelp = 'Check the Generate class box to generate an Opentalk proxy client class for this service. The Opentalk client provides the ability to start/stop the Opentalk broker and to invoke the web service from the server located at the specified server URL.Client class optionsName - the name for the client classPackage - the name of the containing packageName Space - the name of the containing name spaceConnect to sectionService URL - the URL at which the service will be requestedPort - the port on which the service will be offered'GenerateOpentalkServerHelp = 'This page specifies settings to generate an Opentalk-Soap server class.  A request broker maintains the necessary machinery to manage access to its services.  To generate the server class, check the Generate class box, then provide the settings.Server class section:Name - a name for the Opentalk server classPackage - the package to contain the class definitionName Space - the name space to contain the class definitionWsdl schema section:Service name - the Wsdl <service> element nameInterface name - the interface name, same as the service class nameAddress URL - the port access point URL, including the port number Documentation - a description for the port 'GenerateOpentalkSOAPclient = 'Generate Opentalk-SOAP client class'GenerateOpentalkSOAPserver = 'Generate Opentalk-SOAP server class'GenerateWsdlSchemaHelp = 'To generate a WSDL schema, check the Generate box and set the options, then click Next. The schema will be generated from the service class or the Opentalk server that provides a web service description. Schemas section.  Select one of the schema types:Wsdl schema - Generates a Wsdl schema.  A <service> element is included only if an Opentalk server class has been created.XML to object binding - Generates only the <schemaBindings> section for a schema.Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'GeneratingClasses = 'Generating classes....'GeneratingWsdlSchemas = 'Generating Wsdl schemas'Go = 'Go'HeaderIsMissing = 'Header is missing: <1s>'Help = 'Help'HelpDots = 'Help...'ImportMayNotHaveSameNS = 'Import may not have the same namespace as its enclosing schema'ImportXMLObjectBindings = 'Import XML Object Bindings'in = 'in'IncludeSuperclass = 'Include superclass'IncludeSuperclasses = 'Include superclasses'Including1 = 'including 'IncludingSuperClass = 'Including super class'InOut = 'In/Out'InstanceDetails = 'Instance Details'InterfaceDescription = 'Interface description'InterfaceName = 'Interface name'InterfaceOperations = 'Interface operations'IntTypeInWrongRange = ' "xsd:int" type decoded from: <1s> is in a wrong range 'InvalidCharactersInXMLNormalizedString = 'Invalid characters in XML normalized string:  <1s>'InvalidCharactersInXMLString = 'Invalid characters in XML string:  <1s>'InvalidCharactersInXMLToken = 'Invalid "xsd:token" characters in <1s>'InvalidCharactersInXsdString = 'Invalid "xsd:string" characters in  <1s>'InvalidURL = 'Invalid URL'IsMissingMandatoryHeaderFor = 'SoapHeader is missing required header for: <1s>'IsMissingMandatoryValueFor = '<1s> is missing mandatory value for: <2s>'Item = 'Item'KeyNotFound = 'Key <1s> not found'literal = 'literal'LoadSchemaHelp = 'This page specifies the Wsdl schema document from which to generate classes and class generation settings."Wsdl schema URL" section - Identify the schema either as an Http or file URL, or from a file (click Browse file...). "Bind XML types to" sectionClasses - creates a Smalltalk class for each XML complex typeDictionaries - maps each XML complex type to a WebServices.Struct"Create" sectionOpentalk clients - generates clients classes for issuing requests via an Opentalk Request BrokerWsdl clients - generates client classes for issuing requests via an WsdlClientCreate server named: - Check this box and enter a class name to generate an Opentalk server for this schemaCreate service classes - Check this box to create a stub class and methods to implement the service described by the schema.'LoadSchemaSettingsHelp = 'Package - the package where client, server, service and binding classes will be created.Name Space - the Smalltalk name space where client, server, service and binding classes will be created. 'LoadWsdlSchema = 'Load Wsdl schema 'LongTypeInWrongRange = ' "xsd:long" type decoded from: <1s> is in a wrong range 'MaxOccurs = 'maxOccurs'MessageLabelAttributeMustBePresent1s = 'Operation: <1s>. #messageLabel attribute must be present if the message exchange pattern has more than one placeholder message with {direction} equal to the message direction 'MessageLabelMustMatchMessageDirection1s = 'Operation: <1s>. #messageLabel attribute value MUST match message direction'Method = 'Method'MethodC = 'Method:'MethodGeneratedByWSTool = '"This method was generated by Web Services Tool."'MinOccurs = 'minOccurs:'MismatchNumberOfPartsAndArg = 'Mismatch number of parts  and arguments'MissedRestrictionValue = 'Missed restriction value 'MissingRequiredAttributeTransportName = 'Missing required attribute: transportName 'MissingRequiredHeaderEntry = 'The SoapHeader is missing required header entry: <1s> 'MissingRequiredHeaders1s = 'Missing required headers: <1s> 'MissingReturnTypeValueForRequest = 'There is missing return Type value for Request-Response operation pattern.'MissingTypeValueFor1sParameter = 'There is missing Type value for #<1s> parameter'MultipleKeyRefsAreNotAllowed = 'Multliple key refs are not allowed'Name = 'Name'NameAlreadyExist = '<1s> already exists and is not a NameSpace'NameC = 'Name:'NeedKeyForCashedData = 'Need key for cached data element'NegativeIntegerTypeInWrongRange = '"xsd:negativeInteger" type decoded from: <1s> is in a wrong range'NewClassNameHasDuplicateBinding = 'New class name <1s> has duplicate binding in the Smalltalk namespace'NewName = 'New Name'NextX = 'Next >'NillableDefault = 'Use true as nillable default for Soap Array'nillableDefaultHelpText = 'This option allows to set nillable default for Soap Array items. By default a Soap Array item is described with the nillable="false" attribute.'NilValueNotAllowed1s = 'There is a nil value for element: <1s>  that has been described with nillable="false" 'NoBaseTypeSpecified = 'No base type specified'NoBindingForNS = 'No binding defined for namespace: <1s>'NoBindingSelection = 'No binding selection!'NoBusinessSelection = 'No business selection!'NoDefinedMarshalerForNodeTag = 'There is no defined marshaler for the node tag: <1s>'NoDefinedOperationFor = 'No defined operation for <1s>'NoHoldingFoundWithAcquisitionNumber = 'No holding found with acquisition number <1s>.'NoInterfaceForBinding1s = 'Interface not found for binding <1s>'NoKnownUDDIPortAt = 'No known UDDI port at <1s>'NoMarshalerFor = 'No marshaler for: <1s>'NoMarshalerForCollection = 'No element marshaler for collection'NoMarshalerForRPCParameter1s = ' There is no marshaler for RPC parameter: <1s>'NonNegativeIntegerTypeInWrongRange = '"xsd:nonNegativeInteger" decoded from: <1s> is in a wrong range'NonPositiveIntegerTypeInWrongRange = ' "xsd:nonPositiveInteger" decoded from: <1s> is in a wrong range'NoOperationBindingFor1s = 'No operation binding for <1s>'NoOverviewDetailsStored = 'No overview details stored.'NoSelection = 'No selection!'NoServiceSelection = 'No service selection!'NoServiceSpecified = 'No service specified'NoSpecifiedNamespace = 'No specified namespace for:<1s>'NotChangeAccessors = 'Use unchanged schema name'NotSupportedDoubleRepresentation = 'The double representation "<1s>" not supported yet'NotSupportedSoapVersion = 'The WSDL schema binding has non-supported Soap version: <1s>. Supported 1.1 and 1.2'NotSupportedTransportBinding = 'There is no marshaler for <Header> in the Soap binding <1s>'NotUseExistingNames = 'Create a new unique class name'NotYetImplemented = 'Not yet implemented'ObjectNotAssociation = 'The object is not an Association type: <1s>'ObjectNotDictionaryOrStruct = 'The object is not a Dictionary or Struct type: <1s>'ObjectNotDictionaryOrStructOrAssociation = 'The object is not a Dictionary, or Struct, or Association type: <1s>'ObjectNotIdentityDictionary = 'The object is not an IdentityDictionary type: <1s>'OK = 'OK'OneOrMoreHeaderBlocksNotUnderstood = 'The following mandatory SOAP header blocks are not understood: 'OneWay = 'One-Way'OpentalkClients = 'Opentalk clients'OpentalkHasTheSameNameAsServiceClass = 'The Opentalk server has the same name as the service class.<n>Please provide a different name:'Operation1sIsNotDefined = 'Operation <1s> is not defined'OperationDescription = 'Operation Description'OperationFaults = 'Operation Faults'OperationIsNotSpecified = 'The operation is not set. Can not unmarshal header entries'OperationNameIsNotUnique = 'The operation name #<1s> is not unique. Overloaded operations are not supported'OthersNotSupported = '#others is not supported element value 'OverviewURL = 'Overview URL'Parameters = 'Parameters: 'Part = 'Message Part'PartCantResolveRef = 'Part %<<1s>%>  of operation %<<2s>%>  can not resolve reference:  <3s>'PartHasNoTypeInfo = 'Part <1s> of operation <2s> has no type information'Password = 'Password'PleaseTypeAFileName = 'Please type a file name: 'Port = 'Port 'PortIsNotProvided = 'Port is not provided!'PortsList = ' ports ='PortTypeOperations = 'Port Type operations'PositiveIntegerTypeInWrongRange = ' "xsd:positiveInteger" decoded from: <1s> is in a wrong range'POST = 'POST url'PrivideClientClassName = '\Please, provide the client class name:'ProvidesBusinessServiceInfoHelp = 'Provides information about business services and contacts. Select a service and press Next for the service details'qualified = 'qualified'RaiseMissingValueException = 'Always raise missing value exception'RaiseMissingValueExceptionHelpText = 'Setting this option to true will allow raising MissingValueSignal while marshaling the nil value even if the value is defined as optional (minOccurs=0). The default is false and the exception will be raised only for mandatory values (minOccurs=1)'ReferencesHref = 'References: <1s>'RegisteredX2OBindings = 'Registered X2O Bindings'RegisterX2O = 'Register X2O'Registry = 'Registry:'Relation = 'Relation'Remove = 'Remove'RemoveFault = 'Remove Fault'RemoveHeader = 'Remove Header'RemoveRelation = 'Remove relation'RemoveSoapHeader = 'Remove Soap Header'RemoveUnderscoresInAccessors = 'Convert underscores'RequestResponse = 'Request-Response'RequestTimeout = 'Request Timeout'Required1 = 'Required'ReviewAndChangeXMLToObjectBindingSpec = 'Review and Change XML Object Binding Specification'ReviewUpdateX2OHelp = 'In this dialog you can review and change the XML To Object Binding Specification. If you confirm to accept the changes the new XML To Object binding object will be built, verified and registered from the updated specification. Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'rpc = 'rpc'Save = 'Save'SearchFor = 'Search for:'SearchingBusinessHelp = 'Searching for a business by the name or location. 1. Provide the registry URL2. Provide search criteria  and press  Go3. Select a business and press Next for information about the business services'SearchingWSUDDIRegistries = 'Searching Web Services in UDDI registries'SearchUDDIRegistryForWS = 'Search the UDDI Registry for Web Services'Select = 'Select'SelectDots = 'Select...'SelectFaultType = 'Select Fault Type'SelectingWsdlSchemaVersion = 'Selecting Wsdl schema version'SelectingX2OBindingHelp = 'Select to update or create a new XML To Object Binding 'SelectingXMLToObjectBinding1 = 'Selecting XML To Object Binding'SelectServiceClassForBinding = 'Select service class for the binding'SelectSoapHeaderType = 'Select Soap Header Type'SelectToUpdateOrCreateNewWsdl = 'Select to update or create a new WSDL schema'SelectToUpdateOrCreateNewWsdlHelp = 'Select to update or create a new WSDL schema 'SelectWsdl = 'Select WSDL'SelectWsdlVersion = 'Select WSDL Version'SelectWsdlVersionHelp = 'Select WSDL Version.WSDL target namespace - To specify the WSDL schema attribute: "targetNamespace"WSDL versionWSDL 2.0 option creates the schema with the following operation description:pattern="http://www.w3.org/ns/wsdl/in-out" style="http://www.w3.org/ns/wsdl/style/iri"type="http://www.w3.org/ns/wsdl/soap" wsoap:mepDefault="http://www.w3.org/2003/05/soap/mep/request-response/" wsoap:protocol="http://www.w3.org/2003/05/soap/bindings/HTTP/" wsoap:version="1.2"WSDL 1.1 option allows to create Document or RPC style and Literal or Encoded use.'SelectXMLObjectBinding = 'Select or create a new XML Object Binding'ServerClass = 'Server class'ServiceClass = 'Service class'ServiceDescription = 'Service Description'ServiceDetails = 'Service Details'ServiceDetailsHelp = 'Provides information about service bindings.'ServiceKey = 'Service Key'ServiceName = 'WsdlService name=<1s>'Services = 'Services'ServiceServerClientClasses = 'Service, Server and Client Classes'ServicesInvocation = '"Services invocation"'ServiceURL = 'Service URL'SettingsDots = 'Settings...'ShortTypeInWrongRange = ' "xsd:short" decoded from: <1s> is in a wrong range'Simpletype = 'Simple type'SimpleType = 'Simple Type'SmalltalkClassIsNotDefined = 'Smalltalk class <1s> is not defined'SmalltalkClassIsNotSpecified = 'Smalltalk class is not specified'soap = 'soap'Soap11BindingNotFound = 'SOAP 1.1 Binding is not found at <1s>'Soap12BindingNotFound = 'SOAP 1.2 Binding is not found at <1s>'SOAPHeaderNotUnderstood = 'SOAP Header not understood'SoapStyleHelpText = 'Specifies the default SOAP message style (either "rpc" or "document").'SoapVersion = 'SOAP version'SoapVersionHelpText = 'The  currently supported SOAP version.'Source = 'Source...'SpecificationSignature = 'Specification signature'StartClient = '"Start the client"'StartServer = '"Start the server"'StartWsdlWizard = 'Start WS Wizard'StopClient = '"Stop the client"'StopServer = '"Stop the server"'StringDoesnotMatchSoapFaultCodes = 'The string doesn''t match SOAP 1.2 Fault Codes 'StructType = 'Struct type'StructTypeDotDotDot = 'Struct type...'Style = 'Style'StyleAttribute = 'Style attribute'TargetNamespace = 'Target Namespace'TestingWsdlClient = 'Testing Wsdl client'TestingX2OBinding = 'Testing XML To Object Binding'TestOpentalkServerClientScriptHelp = 'If there are an Opentalk server and clients for the WSDL targetNamespace, this page helps you to test the Web services. The script includes code that helps you to start the Opentalk-SOAP server and client and invoke operations from the service provider. You will need to replace the parameter types with real values.If services require to use Soap headers the script won''t work until you create processing policy classes. For more information see Web Services Demo  'TestX2OHelp = 'This page helps you to test the XML to Object Binding. The script marshals Smalltalk objects to XML document and unmarshals XML documents in to Smalltalk objects.'TheAttemptToObtainAuthKeyFailed = 'The attempt to obtain the authentication information failed'TheMarshalerHasBeingDefined = 'The marshaler for the <1s> node has being already defined.'TheMessageDoesNotExpectParameters = 'The message does not expect any parameters'ThePageCannotBeDisplayed = 'The page cannot be displayed'ThereAreFewServers = 'There are a few servers that are using this service. <n>Select the server you want to update:'ThereIsAlreadyX2OBindingWithTargetNamespace1s = 'Target namespace <1s> of an imported schema matches an existing binding, but the associated attributes are different. The attributes have to be merged to continue.'ThereIsClientClassDoYouWantToRemove = 'There is the client class: <1s> that is using this binding. Do you want to remove the class?'ThereIsMissingMandatoryNodeType1sInElement2s = 'There is missing mandatory node type: <1s> in the element: <2s>'ThereIsNilValueInCollection = 'There is nil value in the collection at: <1s>. The item is described as nillable=false'ThereIsNoBindingDescription = 'There is no binding description in the schema'ThereIsNoClass = 'There is no class: <1s>'ThereIsNoEndpointBindingDescriptorForService = 'There is no endpoint binding descriptor'ThereIsNoHeaderEntriesFotHttpBinding = 'There is no header entries for Http binding'ThereIsNoInterafecFaultNamed1s = 'There is no interface fault named: <1s> 'ThereIsNoInterfaceDescriptorForService = 'There is no interface descriptor for the service'ThereIsNoInterfaceDescriptorSet = 'There is no interface descriptor set for the operation binding'ThereIsNoMarshalerFor1s = 'There is no XML marshaler for: <1s>'ThereIsNoMarshalerForInlineType1s = 'There is no marshaler defined for inline type: <1s> 'ThereIsNoNameAttributeForInterfaceFault = 'There is no interface fault for the message:  <1s>'ThereIsNoPortDefinedForClient = 'There is no ports defined for the client'ThereIsNoQulifiedRef = 'There is no qualified reference for: <1s>'ThereIsNoRegisteredXMLObjectbinding = 'There is no registered XMLObjectBinding at: <1s> 'ThereisNoRequiredParametrForMessage = 'There is no required parameter for the message'ThereisNoRequiredSoapHeaderForMessage = 'There is no required SoapHeader for the message'ThereIsNoServiceClass = 'There is no service class'ThereIsNoServiceClassDefined = 'There is no services class:<1s> defined in the configuration'ThereIsNoSuchBindingInRegistry = 'There is no such binding <1s> in WsdlBinding registry'ThereIsNoSuchBindingReference = 'There is no such binding reference: <1s> 'ThereIsNoSuchClass = 'There is no such class: <1s>'ThereIsNoTModelSpecified = 'There is no tModel specified'ThereIsNoWsdlBindingAt1s = 'There is no WsdlBinding registered at: <1s>'TModelDescription = 'TModel Description'TModelHelp = 'Provides information about a Wsdl schema location'ToDebugClientServerEvaluate = '"To debug the client and server, evaluate:"'ToStopAllRequestBrokers = '"To stop all Request Brokers, execute:"'ToUnmarshalUsedDefaultMarshaler = 'The element is not unmarshal'Type = 'Type'UDDIBindingNotFound = 'UDDI binding is not found at <1s>'UDDISchemaBindingNotFound = 'UDDI schema binding is not found at <1s>'UDDISearch = 'UDDI Search'UnexpectedQualifierInNode = 'Unexpected qualifier in <1s>'UnknownBinding1s = 'Unknown binding for: <1s>'UnknownOperationForGetRequest = 'Unknown operation for GET request'UnknownSoapMep = 'Unknown SOAP MEP in the schema binding'UnknownTransport1s = 'Unknown transport: <1s>'UnknownWsdlSchemaNamespace = 'Unknown Wsdl schema root namespace'unqualified = 'unqualified'UnresolvedReference1sFrom2s = 'Unresolved reference <1s>  from selector: #<2s>'UnsignedByteInWrongRange = ' "xsd:unsignedByte" decoded from: <1s> is in a wrong range'UnsignedIntInWrongRange = ' "xsd:unsignedInt". decoded from: <1s> is in a wrong range'UnsignedLongInWrongRange = ' "xsd:unsignedLong". decoded from: <1s> is in a wrong range'UnsignedShortInWrongRange = ' "xsd:unsignedShort". decoded from: <1s> is in a wrong range'UpadteWebServices = 'Update Web Services'UpdateClass = 'Update class'URLIsNotSelected = 'URL is not selected!'UsageNotes = 'Usage notes'Use = 'Use'UseAttribute = 'Use attribute'UseEmptyLengthForDimension = 'Use empty dimension for encoding a Soap Array with nil value'UseEmptyLengthForDimensionHelpText = 'This option defines how to encode a Soap Array with the nil value. If the option is on a Soap Array with the nil value will be encoded using am empty dimension for the arrayType attribute. For example: <varArray SOAP-ENC:arrayType="ns1:string[]" xsi:nil="true" xsi:type="SOAP-ENC:Array">. The default option is false. In this case the Soap Array with the nil value will be encoded as <varArray xsi:nil="true"/>'UseExistingNames = 'Use the existing class name'UseInlineType = 'Encode nodes with inline type'UseInlineTypeHelpText = 'This option chooses whether or not to add the inline type to a node when a message is marshaled. For example: node with inline type <cost xsi:type="xsd:float">29.95</cost> 'UseMethodsInProtocol = 'Use methods in protocol'UseOnlyServerMethods = 'Use only the service class methods'UsePart1InSelector = 'Use operation name and all message parts'UseReference = 'Use multi-reference encoding for identical objects'UseReferenceHelpText = 'This option chooses whether or not to use multi-reference encoding for identical objects (id/href attributes) which means that the only object will be encoded with some id attribute. The rest of the identical objects will be encoded as a reference (href) to this id. Choosing this option preserves object identity.For example, with the option on two accessors to the same string will appear, as follows:<greeting id="String-0">Hello</greeting><salutation href="#String-0"/>However, if the option is turned off, they will be encoded as two single-reference values as follows:<greeting>Hello</greeting><salutation>Hello</salutation>'username = 'User name'UseServerSuperMethods = 'Add the service super class methods'UseStructAsChoiceValueHelpText = 'Turning on this option will unmarshal choice elements as Structs. The default setting is false. By default the choice elements will be unmarshaled as Association where the key is the choice sub-element name and the value is the unmarshaled choice object.An example:<struct name="MyStruct"><choice name="choiceValue"><element name="a" ref="string"/><element name="b" ref="string"/></choice></struct>When the option is off the input parameter ismyStruct := Struct new		at: #choiceValue put: (''a''-> ''aa'');		yourself.Unmarshaling XML document with the option off will return an association at #choiceValue.When the option is on the input parameter ismyStruct := Struct new		at: #choiceValue put: (Struct new at: #a put: ''aa''; yourself );		yourself.Unmarshaling XML document with the option off will return a Struct at #choiceValue.'UseStructAsChoiceValueValue = 'Use Struct as Choice value'UseTypeHelpText = 'Specifies the default "use" attribute in the SOAP body binding description (either "literal" or "encoded").'UsingExistingName = 'If the class name to be created already exists:'utf8 = 'utf-8'ValidateAndLoadXMLToObjectBinding = 'Validate and Load XML To Object Binding'ValidationFailedFor = 'Validation failed for: <1s>. <2s>'ValueHref = ' Value: <1s>'VersionMismatch = 'VersionMismatch'ViewSchema = 'View schema'ViewX2O = 'View X2O...'ViewXMLToObjectBinding = 'View XML To Object Binding'VWBindingBindingIsNotFound = 'VWBinding binding is not found at <1s>'WarningIn = 'Warning in:<1s>%>%><2s>'WebServices = 'Web services'WebServicesClassBuilder = 'Class Builder'WebServicesWizard = 'Web Services Wizard'WebServicesWorkspace = 'Web Services Workspace'WebServicesWsdlBuilder = 'Wsdl Builder'WebServicesWsdlBuilderSoapBinding = 'WSDL 1.1 Binding'WebServicesXMLSchemaBuilder = 'XML Schema Builder'WelcomeToWebServicesWizard = 'Welcome to the Web Services Wizard'welcomeToWsdlWizard = 'Welcome to the WSDL Wizard'WhileGeneratingClassSelectors = 'While generating service and client selectors:'WhileGeneratingClassSelectorsHelpText = 'Depending on this setting, the tool does the following:- If "Use operation name and all message parts" is selected, then the Wsdl Class Builder will generate the service and client class selectors as following: selector := operationNamePart1:part2:part3:.. For example: the BabelFish schema has operation name as #BabelFish and parts as #Translationmode and #Sourcedata. With this option on the selector will be created aClient>>babelFishTranslationmode:sourcedata:- If "Don''t use the first message part" is selected, selectors will be generated as following: selector := operationName:part2:part3:... This is the default option. For example: aClient>>babelFish:sourcedata: 'WhileGeneratingSchema = 'While generating the schema:'WhileGeneratingXMLSchemaTypes = 'While generating the XML schema types:'WrapDocumentLiteralResult = 'Wrap document literal results'WrapDocumentLiteralResultHelpText = 'This option defines how to return results in document/literal style, bare or wrapped in a collection. The latter form used to be the behavior in previous releases. This option allows to restore the backward compatible behavior.'WrongCollectionSize = 'Wrong collection size'WrongEnumerationValue = 'Wrong enumeration value: <1s>'WrongHeaderValueToMarshal = 'Wrong header value to marshal: <1s>'WrongMarshalerType = 'Wrong marshaler type'WrongObjectTypeForAspect = 'Wrong type for aspect: <1s>. Expected: <2s>. Received: <3s>'WrongObjectTypeForCollection = 'Wrong type for collection: <1s>.'WrongParameterOrXMLSchema = 'Wrong parameter or XML schema type'WrongTypeOfElementMarshaler = 'Wrong type of the element marshaler: <1s>. Expected RelationMarshaler'WrongURL = 'Wrong url:<1s>'WrongXMLToObjectBindingFor1s2s = 'Wrong XML to object binding for <1s> in operation <2s>. RelationMarshaler is required to resolve the reference'wsdl11 = 'WSDL 1.1'Wsdl20 = 'WSDL 2.0'WSDLBindingIsNotFound = 'WSDL Binding is not found at <1s>'WsdlClients = 'Wsdl clients'WsdlOperation = 'Wsdl operation'WsdlSchemaDefinitionsOrDescriptionNodeNotFound = 'Wsdl schema definitions or description node is not found in the document'WsdlSchemaURL = 'Wsdl schema URL'WsdlSchemaURLContents = '\\Wsdl schema URL contents:\'wsdlSchemaVersion = 'Wsdl schema version'wsdlServiceName = 'Service name'WsdlServicePort = 'Wsdl schema'WsdlWizardFinishingBlurbText = 'To generate another schema, click the Back button.To close the wizard, click Finish.'WsdlWizardWelcomeBlurbText = 'This wizard guides you through the steps of exposing an existing Smalltalk application as a web service. Alternatively, given a WSDL schema, it can generate Smalltalk classes to access (or implement) the service.<nn>Select one of the options:'wsSoap0SoapVersion1_1 = '1.1'X2OBindingSettings = 'XML to Object Binding Settings'X2OBindingSettingstHelpText = 'Name:  XML to Object Binding name or XML schema nameDefault Element Form: The global XML schema attribute that indicates whether or not locally declared elements must be set to "qualified" or "unqualified."Default Attribute Form: The global XML schema attribute that indicates whether or not locally declared attributes must be set to "qualified" or "unqualified."Default class namespace: The Smalltalk namespace where binding smalltalkClass attributes will be resolved Allow marshaling derived types in relations: Setting this option to on will allow marshaling derived objects when a type is described with a superclass marshaler. The default option is false. An example:<object name="customer" ..><element name="address" ref="Address"/></object>The "Address" type  is the supeclass for USAddress and UKAddress classes. Setting the option to true (checked) will allow using instances of USAddress and UKAddress to provide value for the address type. Unmarshaling will return instances of USAddress or UKAddress. The option default is false (unchecked) and requires providing the instance of the Address class as a value. Unmarshaling will return instances of the Address class.'X2OTool = 'X2O Tool'XMLEncoding = 'XML encoding'XMLEncodingHelpText = 'Specifies the default XML document encoding'XMLObjectMapping = 'XMLSchema Mapping'XMLObjectMarshaling = 'XMLObject Marshaling'XMLSchemaSpecification = 'XML Schema Specification'XMLSchemaTargetNamespace = 'XML Schema targetNamespace'XMLSourceMissingMandatoryNode = 'Complex type: <1s> is missing mandatory node: <2s>'XMLToSmalltalkObjectBinding = 'XML To Smalltalk Object Binding'XsdBindingBindingIsNotFound = 'XsdBinding binding is not found at <1s>'YouAreGoingToLoseOperationTypeDescription = 'You are going to lose operation type description for class: <1s>'YouNeedToObtainAuthKey = 'You need to obtain an authentication token. Use #getAuthTokenFor:credential:'