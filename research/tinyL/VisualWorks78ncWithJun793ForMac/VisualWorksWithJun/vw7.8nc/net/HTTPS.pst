<?xml version="1.0"?><st-source><!-- Name: HTTPSNotice: Copyright © 2010-1999 Cincom Systems, Inc.  All Rights Reserved.Comment: This parcel adds HttpsConnection extending the regular HttpClient with the ability to conduct an HTTP conversation over a securechannel established using SSL. A new type of URI corresponding to the 'https://' convention is added as well. Note that secure usageof SSL requires certain level of understanding of the issues involved, therefore we urge you to consult available SSL documentation,before relying on security of HTTPS.DbIdentifier: bear73DbTrace: 303494DevelopmentPrerequisites: #(#(#any 'HTTP' '') #(#any 'NetSecureConnection' '') #(#package 'NetClientBase' ''))PackageName: HTTPSParcel: #('HTTPS')ParcelName: HTTPSPrerequisiteParcels: #(#('HTTP' '') #('NetSecureConnection' '') #('NetClientBase' ''))PrintStringCache: (7.8 - 1003,mkobetic)Version: 7.8 - 1003Date: 11:58:37 AM December 21, 2010 --><time-stamp>From VisualWorks®, Pre-Release 7.8 (dec10.3) of December 21, 2010 on December 21, 2010 at 11:58:37 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>HttpsURL</name><environment>Net</environment><super>Net.HttpURL</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Net-Resources</category><attributes><package>HTTPS</package></attributes></class><comment><class-id>Net.HttpsURL</class-id><body>HttpsURL describes resources accessed using the HTTP protocol over SSL connection.</body></comment><class><name>HttpsConnection</name><environment>Net</environment><super>Net.SSLConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			Security.*			</imports><category>Net-HTTP-Support</category><attributes><package>HTTPS</package></attributes></class><comment><class-id>Net.HttpsConnection</class-id><body>HttpsConnection provides HTTP connection over SSL. Normally the connection switches to SSL immediately after opening. However if the connection goes through a proxy, the initial CONNECT exchange with the proxy is done in plaintext and connection switches to SSL after the proxy connects to the remote server.</body></comment><methods><class-id>Net.HttpsURL class</class-id> <category>defaults</category><body package="HTTPS" selector="defaultPortNumber">defaultPortNumber	^443</body></methods><methods><class-id>Net.HttpsURL class</class-id> <category>accessing</category><body package="HTTPS" selector="protocol">protocol	^'https'</body></methods><methods><class-id>Net.HttpsConnection</class-id> <category>testing</category><body package="HTTPS" selector="accepts:">accepts: url	^url protocol = 'https'</body></methods><methods><class-id>Net.HttpsConnection</class-id> <category>private</category><body package="HTTPS" selector="createSocketTimeout:">createSocketTimeout: aNumber	| s |	s := self class defaultSocketAccessor			family: (SocketAddress domainCodeFromName: #afInet)			type: SocketAccessor sockStream.	s timeout: aNumber.	^s</body></methods><methods><class-id>Net.HttpsConnection</class-id> <category>accessing</category><body package="HTTPS" selector="hostName:">hostName: aString	hostName := aString</body></methods><methods><class-id>Net.HttpsConnection</class-id> <category>initialize-release</category><body package="HTTPS" selector="openStreamFor:port:timeout:">openStreamFor: hostNameString port: aNumber timeout: tmNumber	self disconnect.	self openSocketStreamFor: hostNameString port: aNumber timeout: tmNumber encoding: #binary.	self startSSL.	^stream</body></methods><methods><class-id>Net.HttpsConnection class</class-id> <category>default values</category><body package="HTTPS" selector="defaultPortNumber">defaultPortNumber	^443</body><body package="HTTPS" selector="defaultSocketAccessor">defaultSocketAccessor	^HttpConnection defaultSocketAccessor</body></methods><methods><class-id>Net.HttpProtocolInterpreter</class-id> <category>secure connection</category><body package="HTTPS" selector="useSecureConnection">useSecureConnection	connection := HttpsConnection new.</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>SSLConnection</name><environment>Net</environment><super>Net.NetConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars>sslContext sslConnection validationBlock hostName </inst-vars><class-inst-vars>defaultValidationBlockFactory </class-inst-vars><imports>			Security.*			</imports><category>Net-SecureConnection-Support</category><attributes><package>NetSecureConnection</package></attributes></class><class><name>HttpURL</name><environment>Net</environment><super>OS.URLwithAuthority</super><private>false</private><indexed-type>none</indexed-type><inst-vars>user decompressContents decodeContents </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Net-HTTP-Support</category><attributes><package>HTTP</package></attributes></class><class><name>HttpProtocolInterpreter</name><environment>Net</environment><super>Net.NetProtocolInterpreter</super><private>false</private><indexed-type>none</indexed-type><inst-vars>authPolicy proxyAuthPolicy cookieAgent enableCookies request hostName portNumber timeout useProxy proxyHost readingOptions writingOptions </inst-vars><class-inst-vars>enableCookieProcessing </class-inst-vars><imports></imports><category>HTTP</category><attributes><package>HTTP</package></attributes></class></st-source>