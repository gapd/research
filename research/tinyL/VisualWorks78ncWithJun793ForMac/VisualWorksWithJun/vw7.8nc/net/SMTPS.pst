<?xml version="1.0"?><st-source><!-- Name: SMTPSNotice: Copyright © 2010-1999 Cincom Systems, Inc.  All Rights Reserved.Comment: This parcel adds SMTPSSLConnection extending the regular SMTPClient with the ability to connect to SMTP server over a securechannel established using SSL. DbIdentifier: bear73DbTrace: 302815DevelopmentPrerequisites: #(#(#any 'NetSecureConnection' '') #(#any 'SMTP' '') #(#package 'NetClientBase' '') #(#package 'SSL' ''))PackageName: SMTPSParcel: #('SMTPS')PrerequisiteParcels: #(#('NetSecureConnection' '') #('SMTP' '') #('NetClientBase' '') #('SSL' ''))PrintStringCache: (7.8 - 1002,mkobetic)Version: 7.8 - 1002Date: 11:58:39 AM December 21, 2010 --><time-stamp>From VisualWorks®, Pre-Release 7.8 (dec10.3) of December 21, 2010 on December 21, 2010 at 11:58:39 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><class><name>SMTPSTARTTLSConnection</name><environment>Net</environment><super>Net.SSLConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports>			Security.*			</imports><category></category><attributes><package>SMTPS</package></attributes></class><comment><class-id>Net.SMTPSTARTTLSConnection</class-id><body>Provides SMTP connection that can upgrade to SSL protected mode on the fly (using the STARTTLS extension of SMTP). The upgrade happens automatically during connect, if the server offers the extension. If the server does not offer the extension the connection remains in unprotected mode.</body></comment><class><name>SMTPSConnection</name><environment>Net</environment><super>Net.SSLConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>SMTPS</package></attributes></class><comment><class-id>Net.SMTPSConnection</class-id><body>Provides SMTP connection tunneled over SSL, using a dedicated "secure" port (usually 465).</body></comment><methods><class-id>Net.SMTPSTARTTLSConnection</class-id> <category>private</category><body package="SMTPS" selector="finishConnecting:">finishConnecting: client	self isSSLActive ifFalse: [ client startSSLIfAvailable ]</body><body package="SMTPS" selector="privateQuitDo:">privateQuitDo: aBlock	[aBlock value]		on: Security.SSLRecordError 		do: [ :ex | "The client sent #quit command but the server closed the connection. We observed this behavior with the gmail server. Usually the server finishes all transactions anyway"			SMTPQuitFailure new				messageText: (#TheQuitCommandWasNotCompleted&lt;&lt; #net &gt;&gt;					'The #QUIT command was not completed. The server closed the connection without reply.');				parameter: ex parameter;				raiseSignal ]</body></methods><methods><class-id>Net.SMTPSTARTTLSConnection class</class-id> <category>default values</category><body package="SMTPS" selector="defaultLineEndConvention">defaultLineEndConvention	^SMTPConnection defaultLineEndConvention</body><body package="SMTPS" selector="defaultPortNumber">defaultPortNumber"These mixed mode connections usually work either on the standard SMTP port or on port 587 (e.g. gmail.com)"	^SMTPConnection defaultPortNumber</body></methods><methods><class-id>Net.SMTPSConnection</class-id> <category>initialize-release</category><body package="SMTPS" selector="openStreamFor:port:timeout:">openStreamFor: hNameString port: aNumber timeout: tmNumber	self disconnect.	self openSocketStreamFor: hNameString port: aNumber timeout: tmNumber encoding: #binary.	self startSSL.	^stream</body></methods><methods><class-id>Net.SMTPSConnection</class-id> <category>private</category><body package="SMTPS" selector="finishConnecting:">finishConnecting: client</body><body package="SMTPS" selector="privateQuitDo:">privateQuitDo: aBlock	[aBlock value]		on: Security.SSLRecordError 		do: [ :ex | "The client sent #quit command but the server closed the connection. We observed this behavior with the gmail server. Usually the server finishes all transactions anyway"			SMTPQuitFailure new				messageText: (#TheQuitCommandWasNotCompleted&lt;&lt; #net &gt;&gt;					'The #QUIT command was not completed. The server closed the connection without reply.');				parameter: ex parameter;				raiseSignal ]</body></methods><methods><class-id>Net.SMTPSConnection class</class-id> <category>default values</category><body package="SMTPS" selector="defaultLineEndConvention">defaultLineEndConvention	^SMTPConnection defaultLineEndConvention</body><body package="SMTPS" selector="defaultPortNumber">defaultPortNumber	^465</body></methods><methods><class-id>Net.SMTPClient</class-id> <category>commands</category><body package="SMTPS" selector="startSSLIfAvailable">startSSLIfAvailable	self state startSSLIfAvailable</body></methods><methods><class-id>Net.SMTPProtocolInterpreter</class-id> <category>secure connection</category><body package="SMTPS" selector="useSecureConnection">useSecureConnection	connection := SMTPSConnection new.</body><body package="SMTPS" selector="useSecureConnectionIfAvailable">useSecureConnectionIfAvailable	connection := SMTPSTARTTLSConnection new.</body></methods><methods><class-id>Net.SMTPConnectedState</class-id> <category>commands</category><body package="SMTPS" selector="startSSLIfAvailable">startSSLIfAvailable	self ehloDo: [		(self client responseLineFor: 'STARTTLS') ifNotNil: [			self client executeCommand: 'STARTTLS'.			self client clientPI connection startSSL	] ].	"for some reason helo/ehlo puts the client to authenticated state, not the case here"	self client state: SMTPConnectedState new</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>SSLConnection</name><environment>Net</environment><super>Net.NetConnection</super><private>false</private><indexed-type>none</indexed-type><inst-vars>sslContext sslConnection validationBlock hostName </inst-vars><class-inst-vars>defaultValidationBlockFactory </class-inst-vars><imports>			Security.*			</imports><category>Net-SecureConnection-Support</category><attributes><package>NetSecureConnection</package></attributes></class><class><name>SMTPProtocolInterpreter</name><environment>Net</environment><super>Net.NetProtocolInterpreter</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>SMTP</category><attributes><package>SMTP</package></attributes></class><class><name>SMTPClient</name><environment>Net</environment><super>Net.NetClient</super><private>false</private><indexed-type>none</indexed-type><inst-vars>serverResponses useAuthentication </inst-vars><class-inst-vars>useAuthentication </class-inst-vars><imports></imports><category>Net-SMTP-Support</category><attributes><package>SMTP</package></attributes></class><class><name>SMTPConnectedState</name><environment>Net</environment><super>Net.SMTPState</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Net-SMTP-Support</category><attributes><package>SMTP</package></attributes></class></st-source>