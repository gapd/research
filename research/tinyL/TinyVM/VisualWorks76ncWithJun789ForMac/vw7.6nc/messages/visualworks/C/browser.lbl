encoding: #UTF_8catalog: #browsera = 'a'Abort = 'Abort'Aborted = 'Aborted'AbstractClassInstanceVariable = 'Abstract Class Instance Variable'AbstractClassInstanceVariableDesc = 'Create accessing methods for a class instance variable and change all direct variable references to use them'AbstractInstanceVariable = 'Abstract Instance Variable'AbstractInstanceVariableDesc = 'Create accessing methods for an instance variable and change all direct variable references to use them'AbstractSelectedInstanceVariable = 'Abstract Selected Instance Variable'AbstractSelectedInstanceVariableDesc = 'Abstract all references to the selected variable to use accessing methods'Accept = 'Accept'AcceptAsCommment = 'Accept as comment'AcceptAsMethod = 'Accept as method'AcceptDesc = 'Save the current text'AcceptPrereqChangesTo1sQ = 'Accept unsaved prerequisite changes to <1s>?'AcceptUnsavedTextChanges = 'Accept unsaved text changes?'ActionC = 'Action:'ActionEditor = 'Action Editor'Add = 'Add'AddActionSpecification = 'Add Action Specification'AddActionSpecificationDesc = 'Create a new action specification'AddAllImplementors = 'Add All Implementors'AddAllSenders = 'Add All Senders'AddClassInstanceVariable = 'Add Class Instance Variable'AddClassInstanceVariableDesc = 'Add a class instance variable to the selected class'AddClassToListC = 'Add class to list:'AddFilter = 'Add Filter'AddFromChangeSet = 'Add from Change Set'AddFromChangeSetDesc = 'Add contents of the current change set'AddInstanceVariable = 'Add Instance Variable'AddInstanceVariableDesc = 'Add an instance variable to the selected class'AddInstVar1sFrom2s = 'Add instance variable named, <1s>, to <2s>'AddOverrideFor1s = 'Add Override for <1s>'AddParameter = 'Add Parameter'AddParameterDesc = 'Add a parameter to the selected method and change all senders to pass a default argument'AddProtocol = 'Add Protocol'AddProtocol1sTo2s = 'Add protocol, <1s>, to <2s>'AddProtocolDesc = 'Add a new protocol to the class'AddRemoveDependentMessageMismatch = 'Number of addDependent: messages > removeDependent:'addSelectionPolicyRewritePrompt = '#addSelectionPolicy was deprecated as an API for registering new tab part tools in the CodeModel.In fact the CodeToolSelectionPolicy class is no longer used and remains here simply to prompt this message.See CodeToolSelectionPolicy comments.I can try to rewrite portions of the API change. You must convert the isActive method manually.Shall I try the rest?'AddSubclasses = 'Add Subclasses'AddSuperclasses = 'Add Superclasses'Add_Changes = 'Add &Changes'Add_FileInDots = 'Add &File-In...'Add_toChanges = 'Add &to Changes'AllToPackageDots = 'All to Package...'AllToParcelDots = 'All to Parcel...'AllValuesMustBeIdentical = 'All values passed as this argument must be identical.'AllValuesMustBeLiteral = 'All values passed must be literal.'AlmostEqButHasSuperSend = 'Although <1s> is equivalent to a superclass method,<n>it contains a super send so it might modify behavior.'Alphabetical = 'Alphabetical'an = 'an'anObject1s = '``@anObject <1s>'anyAllSatisfyNotUsed = 'Uses detect:ifNone: instead of any/allSatisfy:'AParcelWithThisNameAlreadyExists = 'A parcel with this name already exists'Apply = 'Apply'AreYouSure = 'Are you sure?'ArgumentOrderC = 'Argument order:'Arguments1QPermuted = 'The arguments are <1?:not >permuted'ArgumentStillReferenced = 'This argument is still referenced in atleast one implementor!'ARuleIsCurrentlyRunning = 'A rule is currently running.'asArrayNotNeeded = '#asOrderedCollection/#asArray not needed'AssignmentInUnwindBlock = 'Assignment inside unwind blocks should be outside.'AssignmentWithWrongArgNumber = 'Attempting to assign selector with wrong number of arguments.'AvailableParcelsC = 'Available Parcels:'AvailableParcelsPackagesC = 'Available Parcels/Packages:'A_bstract = 'A&bstract'A_bstractDots = 'A&bstract...'A_dd = 'A&dd'BarExpected = '''|'' expected'BindTemporaryToTightestScope = 'Bind Temporary to Tightest Scope'BindTemporaryToTightestScopeDesc = 'Move a temporary variable''s definition to the innermost scope in which it is used'BlockDoesNotHaveCorrectNumArgs1s = 'Block does not have the correct number of arguments (<1s>)'BlockImmediatelyEvaluated = 'Block immediately evaluated'Browse = 'Browse'BrowseAutoFormatHelp = 'Automatically format code when browsing (viewing).'BrowseAutoFormatLabel = 'Browse Auto Formats?'BrowseChangeSetMethodVersions = 'Browse Change Set Method Versions'BrowseChangeSetMethodVersionsDesc = 'Open a change list on all versions of the method in the .cha file.'BrowseClass = 'Browse Class'BrowseClassInNewWindow = 'Browse Class in New Window'BrowseClassMethodsMatchingString = 'Browse Class Methods Matching String'BrowseClassMethodsMatchingStringDesc = 'Open a browser on all methods of the selected class matching a pattern.'BrowseDots = 'Browse...'BrowseMethodChanges = 'Browse Method Changes'BrowseMethodsWithSourceMatchingDots = 'Browse Methods with Source Matching...'BrowseOverridden = 'Browse Overridden'BrowseOverriddenDesc = 'Browse all methods overridden by other components'BrowseOverrides = 'Browse Overrides'BrowseOverridesDesc = 'Browse all methods overridden by the current selection'Browser = 'Browser'BrowseRea_dersDots = 'Browse Rea&ders...'BrowseReferencesToClass = 'Browse References to Class'BrowseRemovedMethods = 'Browse Removed Methods'BrowseRe_ferencesDots = 'Browse Re&ferences...'BrowseVariableRea_dersDots = 'Browse Variable Rea&ders...'BrowseVariableRe_ferencesDots = 'Browse Variable Re&ferences...'BrowseVariable_WritersDots = 'Browse Variable &Writers...'BrowseVersions = 'Browse Versions'Browse_ImplementorsOfSelector = 'Browse &Implementors of Selector'Browse_SendersOfSelector = 'Browse &Senders of Selector'Browse_WritersDots = '&Browse Writers...'Buffers = 'Buffers'BuffersDesc = 'Dynamic menu of buffers'Bugs = 'Bugs'Build = 'Build'BundleCSp = 'Bundle: 'ByteIndexedClassTemplate = 'Byte Indexed Class Template'ByteIndexedClassTemplateDesc = 'Display a template for creating a byte-indexed class'Cancel = 'Cancel'CancelDesc = 'Cancel changes and revert to the original text'CannotAddStmtAfterReturn = 'Cannot add statement after return node'CannotAssignTempToMultiple = 'Cannot assign temp to multiple statements'CannotAssignToNonValueNodes = 'Cannot assign to non-value nodes'CannotChangeCategoryOfRoot = 'Cannot change category of Root name space'CannotChangeWithoutParent = 'Cannot change to a return without a parent node.'CannotExtractAssignmentIfReadBeforeWritten = 'Cannot extract assignment if read before written.'CannotExtractAssignmentsToTempsWithoutAllRefs = 'Cannot extract assignments to temporaries without all references'CannotExtractAssignmentWithoutAllRefs = 'Cannot extract assignment without all references.'CannotExtractCode = 'Cannot extract code'CannotExtractFirstInCascade = 'Cannot extract first message of a cascaded message'CannotExtractLHS = 'Cannot extract left hand side of an assignment'CannotExtractReturn = 'Couldn''t extract code since it contains a return.'CannotInline1sSuperMessageOverridden = 'Cannot inline method since it sends a super message <1s> that is overridden'CannotInlineNonSelfMessage = 'Cannot inline non-self messages'CannotInlinePrimitives = 'Cannot inline primitives'CannotInlineWithMultipleReturns = 'Cannot inline method since it contains multiple returns that cannot be rewritten'CannotInlineWithSuperSend = 'Cannot inline method since it sends a super message'CannotLocateVarDef = 'Cannot locate variable definition'CannotMoveMethodHasSuperSend = 'Cannot move the method since it has a super message send.'CannotMoveMethodTo1sAssigned = 'Cannot move the method into <1s> since it is assigned'CannotMovePrimitiveMethods = 'Cannot move primitive methods'CannotParseSources = 'Cannot parse sources.'CannotPushUp1sMustCopyDownAndSuperOverridden = 'Cannot push up <1s> since we must copy down the superclass method in <2p><n>to the other subclasses, and the superclass method sends a super message which is overridden.'CannotPushUp1sSuperSend = 'Cannot push up <1s> since <2p>>><3s> sends a super message to it.'CannotPushUp1sSuperSendInSuper = 'Cannot push up <1s> since it sends a super message that is defined in the superclass.'CannotPushUpWouldOverride = 'Cannot push up <1s> since it would override the method defined in <2p>'CannotRemoveParamsOfInfix = 'Cannot remove parameters of infix selectors'CannotRemoveTopWithSubclasses = 'Cannot remove top level class when it has subclasses'CannotRemoveWithInstVarsAndSubclasses = 'Cannot remove class that defines instance variables or methods when it has subclasses.'CannotReplaceMsgInCascade = 'Cannot replace message node inside of cascaded node with non-message node.'Ca_tegory = 'Ca&tegory'ChangeC = 'Change:'ChangeCategory = 'Change category'ChangedMethods = 'Changed Methods'ChangedMethods1 = 'Changed methods'ChangedMethodsDots = 'Changed Methods...'ChangedMethodsIn1s = 'Changed methods in <1s>'ChangeIfAbsentToPut = 'at:ifAbsent: -> at:ifAbsentPut:'ChangeListOnChanges = 'Change List on Changes'ChangeListOnChangesDots = 'Change List on Changes...'Changes = 'Changes'changes = 'changes'ChangesDots = 'Changes...'ChangeSet = 'Change Set'ChangeSetDots = 'Change Set...'CheckAllImplementors = 'Check All Implementors'CheckAllImplementorsDesc = 'Add all implementors of the selected method'CheckAllMethods = 'Check All Methods'CheckAllMethodsDesc = 'Add all methods matching a pattern'CheckAllProtocols = 'Check All Protocols'CheckAllProtocolsDesc = 'Add all protocols matching a pattern'CheckAllSenders = 'Check All Senders'CheckAllSendersDesc = 'Add all senders of the selected method'CheckAllSubclasses = 'Check All Subclasses'CheckAllSubclassesDesc = 'Add all the class'' subclasses'CheckAllSuperclasses = 'Check All Superclasses'CheckAllSuperclassesDesc = 'Add all the class'' superclasses'CheckClass = 'Check Class'CheckClassDesc = 'Add the selected class'CheckDots = 'Check...'CheckForSameAtEndOfConditionals = 'Check for same statements at end of ifTrue:ifFalse: blocks'CheckMethod = 'Check Method'CheckMethodDesc = 'Add the selected methods'CheckProtocol = 'Check Protocol'CheckProtocolDesc = 'Add the selected protocols'ChooseAnArgumentToRemoveC = 'Choose an argument to remove:'ChooseATestToDebug = 'Choose A Test To Debug'ChooseOverrideToRemove = 'Choose override to remove'ChooseOverrideToRestore = 'Choose override to restore'ChoosePackage = 'Choose Package'ChooseSubclassesC = 'Choose subclasses:'ChooseVariablesC = 'Choose variables:'Class = 'Class'ClassCSpace = 'Class: 'ClassesC = 'Classes:'ClassesDefiningVariable = 'Classes Defining Variable'ClassesDefiningVariableDots = 'Classes Defining Variable...'ClassesNamespacesAndVariablesC = 'Classes, Variables, Name Spaces:'ClassExtensionDots = 'Class Extension...'ClassInstanceVariables = 'Class Instance Variables'ClassNotReferenced = 'Class not referenced'ClassReferences = 'Class References'ClassSideNewMethodCommentText = 'Answer a newly created and initialized instance.'ClearFilters = 'Clear Filters'CloseBraceExpected = '} expected'CloseBracketExpected = ''']'' expected'CloseParenExpected = ''')'' expected'CmdFileOutGlobal = 'File Out Global'CmdFileOutGlobalDesc = 'File-out the selected class or namespace'CmdFindGlobalName = 'Find Global Name'CmdFindGlobalNameDesc = 'Find a class, a shared variable, or a name space'CmdNewClass = 'New Class'CmdNewClassDesc = 'Create a new class'CmdStoreAddBundle = 'Store Add Bundle'CmdStoreAddBundleDesc = 'Create a new bundle'CmdStoreAddPackage = 'Store Add Package'CmdStoreAddPackageDesc = 'Create a new package'CodeCritic = 'Code Critic'CodeCriticChecks = 'Code Critic Checks'CodeCriticResults = 'Code Critic Results'CodeModelToolsMenu = 'Code Model Tools Menu'CodeModelToolsMenuDesc = 'List of tool views supported by the code model'CodeTool = 'Code Tool'CollectionProtocolNotUsed = 'Uses do: instead of collect: or select:''s'CollectSelectResultIgnored = 'Doesn''t use the result of a collect:/select:'Comment1s = 'Comment <1s>'CommentShouldStateClassPurposeEtc = '  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.'CompareWithDots = 'Compare With...'CompareWithImage = 'Compare with Image'CompareWithParent = 'Compare with Parent'CompareWithSystemDots = 'Compare with System...'Compile1s2s = 'Compile <1s>%>%><2s>'CompileIntoClass = 'Compile into class?'ComputePrereqs = 'Compute Prereqs'ConcatenationInsteadOfStreams = 'String concatenation instead of streams'ConditionalReturns = 'ifTrue:/ifFalse: returns instead of and:/or:''s'ContextHelp = 'Context Help'ContextHelpDesc = 'Open context sensitive help'ConvertTemporaryVariableToInstanceVariable = 'Convert Temporary Variable to Instance Variable'ConvertTemporaryVariableToInstanceVariableDesc = 'Convert the selected temporary variable to an instance variable'ConvertToSibling = 'Convert to Sibling'ConvertToSiblingDesc = 'Create an abstract class and make the selected class a sibling with its subclasses under the new abstract class'Con_vertToInstanceVariable = 'Con&vert to Instance Variable'Copy = 'Copy'CopyDeployment = 'Copy Deployment'CopyDownSuperMethod1s = 'Do you want to copy down the superclass method to the classes that don''t define <1s>'CopyMethods = 'Copy methods'CopySelection = 'Copy Selection'CouldNotExtractSourceFromMethod = 'Could not extract code from method'CouldNotFindMessageSend = 'Could not find message send'CouldNotFindTheNode = 'Could not find the node'CouldNotInlineAnySenders = 'Could not inline any senders'CouldNotParseMethod = 'Could not parse method'CouldNotParseMethodSource = 'Could not parse method source'CouldNotParseSourceCode = 'Could not parse source code.'CouldNotParseSources = 'Could not parse sources'CouldNotParseTheMethod = 'Could not parse the method'CouldntFindSources = 'Couldn''t find sources'CreateAccessors = 'Create Accessors'CreateBuffer = 'Create Buffer'CreateBufferDesc = 'Create a new view'createClass = 'Create Class'CreateClassInstanceVariableAccessors = 'Create Class Instance Variable Accessors'CreateInstanceVariableAccessors = 'Create Instance Variable Accessors'CreateInstanceVariableAccessorsDesc = 'Create accessing methods for the selected instance variable'CreateOverrideForMethod = 'Create override for method?'CreateSelectedInstanceVariableAccessors = 'Create Selected Instance Variable Accessors'CreateSubclass = 'Create Subclass'CreateSubclassDesc = 'Insert a class into the class hierarchy under the currently selected class'Create_SubclassDots = 'Create &Subclass...'Cut = 'Cut'CutSelection = 'Cut Selection'Cu_t = 'Cu&t'DashesArgumentsDashes = '---- Arguments ----'DashesInstanceVariablesDashes = '---- Instance Variables ----'Debugging = 'Debugging'DebugIt = 'Debug It'DebugItDesc = 'Open a debugger on the currently selected code'DefaultNamespace = 'Default Namespace'DefaultNamespaceDot = 'Default Namespace...'Define1s = 'Define <1s>'DefinesEqButNotHash = 'Defines = but not hash'DefinitionToPackage = 'Definition to Package'DefinitionToParcelDots = 'Definition to Parcel...'DeploymentPrerequisites = 'Deployment Prerequisites'DeploymentPrerequisitesToolHelp = 'Deployment prerequsites are an array of prerequisite parcels.  Each individual prerequisite is a name, version pair.  On loading the Parcel loader searches along the SearchPath for .pcl files that have the required name and attempts to load them.  All parcels have a version which is an arbitrary string, that defaults to the empty string.  Each Parcel can also define a prerequisite version block which it can use to select appropriate versions of prerequisite parcels.'DescriptionC = 'Description:'DescriptionOf1s = '>	description of <1s>'DeselectProtocolsMatching = 'Deselect protocols matching:'DeselectSelectorsMatching = 'Deselect selectors matching:'detectifNoneAnySatisfy = 'detect:ifNone: -> anySatisfy:'DevelopmentPrereqToolHelp = 'Development prerequisites are used in loading from Store. Each prerequisite is an array with a type (#parcel #package #bundle or #any), a name and a version string. Developement prerequisites are usually supersets of the deployment prerequisities.'DevelopmentPrerequisites = 'Development Prerequisites'DidNotEvaluateToABlock = 'Did not evaluate to a block'DidNotExtractCode = 'Did not extract code'DidNotExtractMethod = 'Did not extract method'DidNotMoveMethod = 'Did not move method'DifferencesDots = 'Differences...'DiscardButNotUnloadParcelQ = 'Really discard (but not unload) the parcel?'DiscardDots = 'Discard...'DoesNotUseDoWithDoOrTimesRepeat = 'Uses to:do: instead of do:, with:do: or timesRepeat:'DoesNotUseMinMax = 'Uses ifTrue:/ifFalse: instead of min: or max:'DoIt = 'Do It'DoItDesc = 'Execute the selected text'DoNotUseWriteStreamsOnLiterals = 'Convert write streams on literals to be write streams on non-literals'DoUsedInsteadOfAnyAllSatisfy = 'Uses do: instead of any/allSatisfy: or detect:''s'DoYouWantToReplace1sIn2p = 'Do you want to replace <1s> in <2p>'DrawingEditor = 'Drawing Editor'DropProtocols = 'Drop protocols'DynamicChangeList = 'Dynamic Change List'DynamicChangeSet = 'Dynamic Change Set'DynamicDatabaseChangedMethods = 'Dynamic Database Changed Methods'DynamicFileoutChanges = 'Dynamic Fileout Changes'Edit = 'Edit'EditBundleSpecificationDots = 'Edit Bundle Specification...'EliminateGuardingClauses = 'Eliminate guarding clauses'EliminateUnnecessaryNots = 'Eliminate unnecessary not''s'Empty = 'Empty'EmptyCache = 'Empty cache'EmptyDots = 'Empty...'emptySymbol = '-empty symbol-'Enabled = 'Enabled'EnabledC = 'Enabled:'EndOfInitializationCommentText = ' *** And replace this comment with additional initialization code *** 'EndOfStmtList = 'End of statement list encountered'EnterAClassNameC = 'Enter a class name:'EnterAMethodNameC = 'Enter a method name:'EnterAnInstanceVariableNameC = 'Enter an instance variable name:'EnterAStringToSearchForEGBrowser = 'Enter a string search for ("*browser*"):'EnterASymbolC = 'Enter a symbol:'EnterDefaultValueForParameterC = 'Enter default value for parameter:'EnterFileName = 'Enter file name'EnterFileToSaveIgnoresTo = 'Enter the file to save ignores to:'EnterNameForNewParentClass = 'Enter name for new parent class'EnterNameForSelf = 'Enter name for argument to refer to "self" in extracted method'EnterNameForTemporaryC = 'Enter name forTemporary:'EnterNameForTheNewParcel = 'Enter name for the new parcel'EnterNameOfIgnoresFile = 'Enter name of  ignores file:'EnterNewCategory = 'Enter new category'EnterNewName = 'Enter new name'EnterNewNameC = 'Enter new name:'EnterNewProtocol = 'Enter new protocol'EnterNewProtocolOrClassProtoToCopyC = 'Enter new protocol or class>protocol to copy:'EnterNewSelectorC = 'Enter new selector:'EnterStringToSearchFor = 'Enter string to search for'EnterUndoStackSizeC = 'Enter undo stack size:'EnterVarToSearchForRGBrowser = 'Enter variable to search for ("*browser*"):'EqualResultNotUsed = 'Doesn''t use the result of a =, ~=, etc.'ErrorDisplayingTheCanvasPainterNeeded = 'Error displaying the canvas, UIPainter may need to be loaded'ExampleC = 'Example:'Execute = 'Execute'ExecuteAll = 'Execute All'Expecting8bitInteger = 'Expecting 8-bit integer'ExpectingALiteralType = 'Expecting a literal type'Explain = 'Explain'ExplainCode = 'Explain Code'ExplainCodeDesc = 'Explain the selected piece of code'ExtendInPackageC = 'Extend in package:'ExtensionMethods = 'Extension Methods'ExtensionMethodsIn1s = 'Extension methods in <1s>'ExtensionsOfDefinedClasses = 'Extensions of Defined Classes'ExtensionsOfDefinedClassesIn1s = 'Extensions of defined classes in <1s>'ExtractAssignmentOf1sAtEndQ = 'Do you want to extract the assignment of <1s><n>at the end of selection?'ExtractMethod = 'Extract Method'ExtractMethodDesc = 'Extract the selected code into a new method'ExtractMethodToComponent = 'Extract Method to Component'ExtractMethodToComponentDesc = 'Extract the selected code into a method in a different class'ExtractToTemporary = 'Extract to Temporary'ExtractToTemporaryDesc = 'Create a temporary variable assigned to the selection and replace it with the temporary'E_xtendInPackageDots = 'E&xtend in Package...'Failed = 'Failed'FileInFromFileNamed = 'File in from file named'FileIntoDots = 'File Into...'FileIntoPackage = 'File Into Package'FileIntoPackageDesc = 'Load Smalltalk source, compiling it into the selected package'FileOut = 'File Out'FileOutAs = 'File out as'FileOutAsDots = 'File Out As...'FileOutChangesOn = 'File out changes on'FileOutClass = 'File Out Class'FileOutClassDesc = 'File-out the selected classes'FileOutMethod = 'File Out Method'FileOutMethodDesc = 'File-out the selected methods'FileOutOn = 'File out on'FileOutPackage = 'File Out Package'FileOutPackageChanges = 'File Out Package Changes'FileOutPackageChangesDesc = 'File-out the selected package''s changes'FileOutPackageDesc = 'File-out the selected package'FileOutPackageDifferences = 'File Out Package Differences'FileOutPackageDifferencesDesc = 'File-out the differences between the selected package and a version saved in the repository'FileOutProtocol = 'File Out Protocol'FileOutProtocolDesc = 'File-out all methods in the selected protocols'File_OutAsDots = 'File &Out As...'FilingIntoFromn1s = 'Filing Into From<n><1s>'FilterC = 'Filter:'FindC = 'Find:'FindClass = 'Find Class'FindClassDesc = 'Find a class'FindClassVariableNameSpace = 'Find Class/Variable/Name Space'FindClassVariableOrNameSpace = 'Find Class, Variable, or Name Space'FindMethod = 'Find Method'FindMethodDesc = 'Find a method within the selected class'FindNameSpace = 'Find Name Space'FindNameSpaceDesc = 'Find a name space.'FindNameSpaceDots = 'Find Name Space...'FindNamespaceDots = 'Find Namespace...'FindPackage = 'Find Package'FindPackageDesc = 'Find a bundle or package'FindPackageDots = 'Find Package...'FindPackageForClassVariableOrNameSpace = 'Find Package for Class, Variable, or Name Space'FindPackageOrBundle = 'Find Package or Bundle'FindSharedVariable = 'Find Shared Variable'FindSharedVariableDesc = 'Find a Shared Variable'FindSharedVariableDots = 'Find Shared Variable...'FindStillPopulatingC = 'Find (still populating):'FindText = 'Find Text'FindTextDesc = 'Find the specified text'FormatCode = 'Format Code'FormatCodeDesc = 'Format a method'FormatterConfiguration = 'Formatter Configuration'F_ormat = 'F&ormat'GenerateDefaultClassComment = 'Generate Default Class Comment'GenerateDefaultClassCommentDesc = 'Generate a default class comment for the selected class'GenKey2 = 'Make <1s> the default package for changes.'GenKey5 = 'Remove protocol, <1s>, from <2s>'GenKey7 = 'Search blocks can only contain arguments for the node and matching dictionary'GenKey8 = 'Replace blocks can only contain an argument for the matching dictionary'GlobalClassInstanceVariableReaders = 'Global Class Instance Variable Readers'GlobalClassInstanceVariableReadersDesc = 'Browse all methods accessing a class instance variable'GlobalClassInstanceVariableReferences = 'Global Class Instance Variable References'GlobalClassInstanceVariableReferencesDesc = 'Browse all references to a class instance variable'GlobalClassInstanceVariableWriters = 'Global Class Instance Variable Writers'GlobalClassInstanceVariableWritersDesc = 'Browse all methods modifying a class instance variable'GlobalClassReferences = 'Global Class References'GlobalClassReferencesDesc = 'Browse all references to the selected class'GlobalImplementors = 'Global Implementors'GlobalImplementorsActions = 'Global Implementors Actions'GlobalInstanceVariableReaders = 'Global Instance Variable Readers'GlobalInstanceVariableReadersDesc = 'Browse all methods accessing an instance variable'GlobalInstanceVariableReferences = 'Global Instance Variable References'GlobalInstanceVariableReferencesDesc = 'Browse all references to an instance variable'GlobalInstanceVariableWriters = 'Global Instance Variable Writers'GlobalInstanceVariableWritersDesc = 'Browse all methods modifying an instance variable'GlobalReferences = 'Global References'GlobalSenders = 'Global Senders'GlobalSendersActions = 'Global Senders Actions'GlobalSharedVariableReferences = 'Global Shared Variable References'GlobalSharedVariableReferencesDesc = 'Browse all references to a shared variable'GoToClass = 'Go to Class'GoToMethodC = 'Go to method:'GuardingClauses = 'Guarding clauses'Hardcopy = 'Hardcopy'HardcopyClass = 'Hardcopy Class'HardcopyClassDesc = 'Print the selected classes'HardcopyMethod = 'Hardcopy Method'HardcopyMethodDesc = 'Print the selected methods'HardcopyProtocol = 'Hardcopy Protocol'HardcopyProtocolDesc = 'Print all methods in the selected protocols'HardcopyText = 'Hardcopy Text'HardcopyTextDesc = 'Print the current text'HasClassInstVarButNoInitialize = 'Has class instance variables but no initialize method'HasNotBeenCommented = ' has not been commented.'Help = 'Help'Hierarchy = 'Hierarchy'HierarchyImplementors = 'Hierarchy Implementors'HierarchyImplementorsActions = 'Hierarchy Implementors Actions'HierarchyImplementorsActionsDesc = 'Dynamic menu of hierarchy implementors.'HierarchyImplementorsDesc = 'Browse all implementors of the selected method within the hierarchy'HierarchySenders = 'Hierarchy Senders'HierarchySendersActions = 'Hierarchy Senders Actions'HierarchySendersActionsDesc = 'Dynamic menu of hierarchy senders'HierarchySendersDesc = 'Browse all senders of the specified method in the hierarchy'HowToHandle1sReferencesQ = 'How do you want to handle references to "<1s>"?'IconHelp = 'Icon Help'IconHelpDesc = 'Opens help for the browser''s icons.'IconsReference = 'Icons Reference'IdenticalMethodsInSuperclass = 'Methods equivalently defined in superclass'IDontStoreOtherNodes = 'I don''t store other nodes'IllegalInitCodeBecause1s = 'Illegal initialization code because:.<1s>'ImageC = 'Image:'Implementors = 'Implementors'ImplementorsActionsDesc = 'Actions for Implementors'ImplementorsDesc = 'Browse all implementors of the selected method'ImplementorsMatching = 'Implementors Matching'ImplementorsMatchingDesc = 'Find all implementors whose selector matches the selector within the current scope of the browser'ImplementorsMatchingDots = 'Implementors Matching...'ImplementorsOf1s = 'Implementors of <1s>'InaccessibleVarRefWarning = 'This method contains references to variables<n>which are inaccessible in the<n>name space of the destination.'IndexedClassTemplate = 'Indexed Class Template'IndexedClassTemplateDesc = 'Display a template for creating an indexed class'IndexOfInsteadOfIncludes = 'Uses indexOf: instead of includes:'InheritedClassesSpecifications = 'Inherited Classes Specifications'InheritedClassesSpecificationsDesc = 'A dynamic menu showing the superclasses for inheriting methods. 'InitCodeCannotBeReturnOrList = 'The initialization code cannot be a return node or a list of statements'Initialize = 'Initialize'InitializerMethodCommentText = 'Initialize a newly created instance. This method must answer the receiver.'InitializeSharedVariable = 'Initialize Shared Variable'InitializeSharedVariableDesc = 'Initialize a shared variable'Inline1sOrUseTempQ = 'Do you want to inline "<1s>"? If not, it will be assigned as a temporary.'InlineAllSelfSends = 'Inline All Self Sends'InlineAllSelfSendsDesc = 'Inline the selected method into all senders of self, removing the method if there are no senders'InlineMethod = 'Inline Method'InlineMethodDesc = 'Inline the selected message send into the containing method; replace the original message send with the body of the method that is sent'InlineParameter = 'Inline Parameter'InlineParameterDesc = 'Convert the parameter of the method into a temporary defined in the method if all senders have the same argument'InlineSelectedMessage = 'Inline Selected Message'InlineSelectedMessageDesc = 'Inline the selected message into the current method'InlineSelectedParameter = 'Inline Selected Parameter'InlineSelectedParameterDesc = 'Inline the selected parameter from all senders'InlineTemporary = 'Inline Temporary'InlineTemporaryDesc = 'Change all references to the temporary variable to its definition'inPackageDots = 'in Package...'inParcelDots = 'in Parcel...'InsepctAll = 'Inspect All'Inspect = 'Inspect'InspectAllInstances = 'Inspect All Instances'InspectAllInstancesDesc = 'Inspect all instances of the selected class'InspectIt = 'Inspect It'InspectItDesc = 'Evaluate the selected text and inspect the result'InspectMethod = 'Inspect Method'InspectMethodDesc = 'Inspect the selected method'Install = 'Install'Instance = 'Instance'InstanceVariablesC = 'Instance Variables:'instVarName1InstVarName2 = 'instVarName1 instVarName2'InstVarNotReferenced = 'Instance variables not referenced'InstVarOnlyReadOrWritten = 'Instance variables not read AND written'InstVarOverriddenByTemp = 'Instance variable overridden by temporary variable'InstVarReferencedOnced = 'Variable referenced in only one method and always assigned first'InstVarsInAllSubclasses = 'Instance variables defined in all subclasses'IntentionRevealing = 'Intention revealing'InternalErrorPleaseReport = 'An internal error occured, please report this error.'InvalidInterval = 'Invalid interval'InvalidMethodName = 'Invalid method name'InvalidMethodSource = 'Invalid method source'InvalidNameInQRef = 'Invalid name in qualified reference'InvalidRangeForVariable = 'Invalid range for variable'InvalidSelection = 'Invalid selection'InvalidSource = 'Invalid source.'InvalidSourceToExtract = 'Invalid source to extract'InvalidToken = 'Invalid token'InvalidVariableName = 'Invalid variable name'In_lineMethod = 'In&line Method'In_lineParameter = 'In&line Parameter'LintRules = 'Lint Rules'ListContents = 'List Contents'LiteralArrayContainsComma = 'Literal array contains a #,'LiteralArrayWithOnlyChars = 'Literal array contains only characters'Load = 'Load'LoadFiltersDots = 'Load Filters...'LoadingFilen1s = 'Loading file<n><1s>'LoadPackageOrBundleDots = 'Load Package or Bundle...'LoadVersionDots = 'Load Version...'LocalBrowseSelectedInstanceVariableReaders = 'Local Browse Selected Instance Variable Readers'LocalBrowseSelectedInstanceVariableReferences = 'Local Browse Selected Instance Variable References'LocalBrowseSelectedInstanceVariableWriters = 'Local Browse Selected Instance Variable Writers'LocalClassInstanceVariableReaders = 'Local Class Instance Variable Readers'LocalClassInstanceVariableReadersDesc = 'Browse all methods accessing the class instance variable within the current scope of the browser'LocalClassInstanceVariableReferences = 'Local Class Instance Variable References'LocalClassInstanceVariableReferencesDesc = 'Browse all methods referencing the class instance variable within the current scope of the browser'LocalClassInstanceVariableWriters = 'Local Class Instance Variable Writers'LocalClassInstanceVariableWritersDesc = 'Browse all methods modifying the class instance variable within the current scope of the browser'LocalClassReferences = 'Local Class References'LocalClassReferencesDesc = 'Browse all methods referencing the selected class within the current scope of the browser'LocalImplementors = 'Local Implementors'LocalImplementorsActions = 'Local Implementors Actions'LocalInstanceVariableReaders = 'Local Instance Variable Readers'LocalInstanceVariableReadersDesc = 'Browse all methods accessing the instance variable within the current scope of the browser'LocalInstanceVariableReferences = 'Local Instance Variable References'LocalInstanceVariableReferencesDesc = 'Browse all methods referencing the instance variable within the current scope of the browser'LocalInstanceVariableWriters = 'Local Instance Variable Writers'LocalInstanceVariableWritersDesc = 'Browse all methods modifying the instance variable within the current scope of the browser'LocalReferences = 'Local References'LocalSenders = 'Local Senders'LocalSendersActions = 'Local Senders Actions'LocalSharedVariableReferences = 'Local Shared Variable References'LocalSharedVariableReferencesDesc = 'Browse all references to the variable within the current scope of the browser'LongMethods = 'Long methods'LTnoSelectorGT = '<no selector>'MakeRemoveScriptDots = 'Make Remove Script...'MakeVariableA_bstract = 'Make Variable A&bstract'MatchesRegularExpression = 'Matches regular expression'Matching1s = 'Matching: <1s>'Menu = 'Menu'MergeIntoImage = 'Merge Into Image'MessageExpected = 'Message expected'MessagePatternExpected = 'Message pattern expected'MessagesSentButNotImplemented = 'Messages sent but not implemented'MetaVariableExpected = 'Meta variable expected'Method = 'Method'MethodCSpace = 'Method: 'MethodDefinedInSubsButNotSupers = 'Method defined in all subclasses, but not in superclass'MethodDoesntExist = 'Method doesn''t exist.'MethodHasNoArgs = 'This method contains no arguments'MethodHasVarRefsToConvertToAccessors = 'This method has direct variable references which<n>will need to be converted to getter/setters.'MethodJustSendsSuper = 'Method just sends super message'MethodName = 'Method name'MethodNotMoved = 'Method not moved'MethodsC = 'Methods:'MethodsImpButNotSent = 'Methods implemented but not sent'MethodsUsedBy1sButNotIn2s = 'Methods used only by <1s> but not in <2s>'MethodsWithStringsMatching = 'Methods with Strings Matching'MethodsWithStringsMatchingDesc = 'Find all methods which have a literal string matching a string within the current scope of the browser'MethodsWithStringsMatchingDots = 'Methods with Strings Matching...'MethodWithFullBlocks = 'Method with full blocks'MissingSuperSends = 'Missing super sends'ModifiedViewsExistsExitAnyway = 'Modified views exists.Exit anyway?'ModifiesWhileIterating = 'Modifies collection while iterating over it'MoreBuffers = 'More Buffers'MoreBuffersDesc = 'Select a buffer'Move = 'Move'Move1sTo2sIn3s = 'Move <1s>, to <2s> in <3s>'MoveAssignmentOutOfEnsure = 'Move assignment out of ensure: blocks'MoveAssignmentOutOfShowWhile = 'Move assignment out of showWhile: blocks'MoveAssignmentOutsideOfConditionals = 'Move variable assignment outside of single statement ifTrue:ifFalse: blocks'MoveCompleteObjectToPackage = 'Move Complete Object to Package'MoveCompleteObjectToPackageDesc = 'Move the complete object (methods and shared variables) to a new package'MoveCompleteObjectToParcel = 'Move Complete Object to Parcel'MoveCompleteObjectToParcelDesc = 'Move the complete object (methods and shared variables) to a new parcel'MoveDefinitionsToPackage = 'Move definitions to package'MoveDefinitionsToParcel = 'Move definitions to parcel'MoveMethodsOrSharedsToPackage = 'Move methods/shared variables to package'MoveMethodssharedVariablesToParcel = 'Move methods/shared variables to parcel'MoveMethodToComponent = 'Move Method to Component'MoveMethodToComponentDesc = 'Move the selected method to another object, replacing the selected method with a forwarder'MoveMethodToPackage = 'Move Method to Package'MoveMethodToPackageDesc = 'Move selected methods to a package'MoveMethodToParcel = 'Move Method to Parcel'MoveMethodToParcelDesc = 'Move the selected methods to a new parcel'MoveMethodToProtocol = 'Move Method to Protocol'MoveMethodToProtocolDesc = 'Move the selected methods to a new protocol'MoveObjectDefinitionToPackage = 'Move Object Definition to Package'MoveObjectDefinitionToPackageDesc = 'Move the object definitions to a new package'MoveObjectDefinitionToParcel = 'Move Object Definition to Parcel'MoveObjectDefinitionToParcelDesc = 'Move the selected object''s definitions to a new parcel'MoveObjectsToCategory = 'Move objects to category'MoveObjectsToPackage = 'Move objects to package'MoveObjectsToParcel = 'Move objects to parcel'MoveObjectToNameSpace = 'Move Object to Name Space'MoveObjectToNameSpaceDesc = 'Move the selected objects to another name space'MoveObjectToPackage = 'Move Object to Package'MoveObjectToPackageDesc = 'Move the selected objects to a package'MoveObjectToParcel = 'Move Object to Parcel'MoveObjectToParcelDesc = 'Move the selected object to a parcel'MoveProtocolToPackage = 'Move Protocol to Package'MoveProtocolToPackageDesc = 'Move the selected protocols to a package'MoveProtocolToParcel = 'Move Protocol to Parcel'MoveProtocolToParcelDesc = 'Move the selected protcols to a parcel'MoveSelectedTemporaryToInnermostScope = 'Move Selected Temporary to Innermost Scope'MoveSelectedTemporaryToInnermostScopeDesc = 'Move the variable definition to its innermost scope'MoveSharedVariableToProtocol = 'Move Shared Variable to Protocol'MoveSharedVariableToProtocolDesc = 'Move the selected shared variables to another protocol'MoveToInner_Scope = 'Move to Inner &Scope'MoveToNamespace = 'Move to Namespace'MultipleAssignmentsExist = 'There are multiple assignments to the variable'MultipleViewsExistExitAnyway = 'Multiple views exist.Exit anyway?'NA1pArgSelectorRequired = 'Not available: <1p> argument selector required'NameC = 'Name:'NameOfBinding = 'NameOfBinding'NameOfClass = 'NameOfClass'NameOfPool = 'NameOfPool'NameOfSuperclass = 'NameOfSuperclass'NameSpace = 'NameSpace'NameSpaceCSpace = 'Name Space: 'NamespaceDots = 'Namespace...'NameSpaceTemplate = 'Name Space Template'NameSpaceTemplateDesc = 'Display a template for creating a name space'NavigateToClass = 'Navigate to Class'NavigateToClassDesc = 'Change the selection to the highlighted class'Navigator = 'Navigator'NavigatorRemoveParamter = 'Navigator Remove Paramter'NavigatorRemoveParamterDesc = 'Remove an argument from the method if all implementors of the method do not use the argument'NavigatorTypes = 'Navigator Types'NavigatorTypeSpecifications = 'Navigator Type Specifications'NavigatorTypeSpecificationsDesc = 'List of navigator types'New = 'New'NewClassTemplate = 'New Class Template'NewClassTemplateDesc = 'Display a template for defining a new class'NewNameSpace = 'New Name Space'NewNameSpaceDesc = 'Create a new name space.'NewProtocol = 'New Protocol'NewSharedVariable = 'New Shared Variable'NewSharedVariableDesc = 'Create a new shared variable'New_BundleDots = 'New &Bundle...'New_ClassDots = 'New &Class...'New_PackageDots = 'New &Package...'Ne_wDot = 'Ne&w...'No = 'No'Nobody = 'Nobody'NobodyDefinesMethod1s = 'Nobody defines a method named <1s>'NoCallersUseRemove = 'No callers. Use Remove Method instead.'NoChangedMethods = 'No changed methods'NoChanges = 'No changes'NoClassesSelectedMethodNotMoved = 'No classes selected, method not moved.'NoImplementorSelected = 'No implementor selected'NoImplementorsOf1pFound = 'No implementors of <1p> found'NoMethodsMatching1sFound = 'No methods matching "<1s>" found'NonAbstract2pOrSuperDefine1p = 'Non-abstract class <2p> or one of its superclasses already define <1p>'NonBlockConditionals = 'Non-blocks in ifTrue:/ifFalse: messages'none1 = '(none)'NonSeparatorsNotValid = 'Non-separator characters are not valid.'NoOverriddenCode = 'No overridden code'NoOverrides = 'No overrides'NoResultsFound = 'No results found.'NoResultsToBrowse = 'No results to browse'NoSendersOf1pFound = 'No senders of <1p> found'NoSubclassDefines1s = 'No subclass defines <1s>'NoSubclassResponsibility = 'Subclass responsibility not defined'NoSuchObject = 'No such object'NotAllSubclassesHaveInstVar1s = 'Not all subclasses have an instance variable named <1s>.'NotPackaged = 'Not packaged'NotRunAbstractTest = 'Abstract test class, cannot run'NotRunC1pTests = 'Not run: <1p> tests'Object1sNoLongerExists = 'Object <1s> no longer exists.'OK = 'OK'Open = 'Open'OpenBrowserOnClass = 'Open Browser on Class'OpenBrowserOnClassDesc = 'Browse only the selected class'OpenParcelProperties = 'Open Parcel Properties'OpenParcelPropertiesDesc = 'Open a parcel properties window on the selected parcel'Open_NewBrowser = 'Open &New Browser'OptionsC = 'Options:'OrderOfExecutionChangeWarning = 'To inline this method, we need to move some of its statements before the original message send.<n>This could change the order of execution, which can change the behavior.<n>Do you want to proceed?'ORsInsteadOfLiteral = 'Uses or''s instead of a searching literal'OtherNameSpace = 'OtherNameSpace'OverriddenByOthers = 'Overridden by Others'OverriddenByOthersDots = 'Overridden by others...'OverriddenC = 'Overridden:'OverriddenSourceC = 'Overridden Source:'Override = 'Override'OverrideMethodsOrSharedsInPackage = 'Override methods/shared variables in package'OverrideMethodsSharedsInParcel = 'Override methods/shared variables in parcel'OverrideObjectsInPackage = 'Override objects in package'OverrideObjectsInParcel = 'Override objects in parcel'OverridesASpecialMessage = 'Overrides a "special" message'OverridesOfOthers = 'Overrides of Others'OverridesOfOthersDots = 'Overrides of others...'PackageCSpace = 'Package: 'PackageDots = 'Package...'PackageHasParentSelectNewQ = 'Package already has a parent.<n>Select a new parent?'Packages = 'Packages'PackagesAndBundlesC = 'Packages and Bundles:'Pac_kage = 'Pac&kage'ParcelAddChanges = 'Parcel Add Changes'ParcelAddChangesDesc = 'Add the items from the current change set to the selected parcel'ParcelAddFilein = 'Parcel Add File-in'ParcelAddFileinDesc = 'Load Smalltalk source, compiling it into the selected parcel'ParcelAddToChanges = 'Parcel Add to Changes'ParcelAddToChangesDesc = 'Add the contents of the selected parcels to the change set'ParcelBrowseChangedMethods = 'Parcel Browse Changed Methods'ParcelBrowseChangedMethodsDesc = 'Browse all methods in the parcel that have changed since the parcel was saved'ParcelBrowseExclusiveMethodImports = 'Parcel Browse Exclusive Method Imports'ParcelBrowseExclusiveMethodImportsDesc = 'Browse all methods not defined in this parcel, but are only used within it'ParcelBrowseExtensionMethods = 'Parcel Browse Extension Methods'ParcelBrowseExtensionMethodsDesc = 'Browse extension methods in the parcel'ParcelBrowseExtensionsOfDefinedClasses = 'Parcel Browse Extensions of Defined Classes'ParcelBrowseExtensionsOfDefinedClassesDesc = 'Browse extensions of the parcel''s defined classes'ParcelBrowseReferencesToDefinedClasses = 'Parcel Browse References to Defined Classes'ParcelBrowseReferencesToDefinedClassesDesc = 'Browse references to all classes defined in this parcel'ParcelBrowseSubclassesOfDefinedClasses = 'Parcel Browse Subclasses of Defined Classes'ParcelBrowseSubclassesOfDefinedClassesDesc = 'Browse all subclasses in other parcels of this parcel''s defined classes'ParcelBrowseUnparceledMethodsOnDefinedClasses = 'Parcel Browse Unparceled Methods on Defined Classes'ParcelBrowseUnparceledMethodsOnDefinedClassesDesc = 'Browse all unparceled methods whose class is defined in the parcel'ParcelCreate = 'Parcel Create'ParcelCreateDesc = 'Create a new parcel'ParcelDiscard = 'Parcel Discard'ParcelDiscardDesc = 'Delete the parcel without unloading its source'ParcelEmpty = 'Parcel Empty'ParcelEmptyDesc = 'Empty the selected parcel without removing its source from the image'ParcelFileout = 'Parcel File-out'ParcelFileoutDesc = 'Save the selected parcel as a Smalltalk source file-out'ParcelLoad = 'Parcel Load'ParcelLoadDesc = 'Load a parcel'ParcelMakeRemoveScript = 'Parcel Make Remove Script'ParcelMakeRemoveScriptDesc = 'Create a script to remove the parcel'ParcelOverrideMethod = 'Parcel Override Method'ParcelOverrideMethodDesc = 'Create overrides for the selected methods and shared variables'ParcelOverrideObject = 'Parcel Override Object'ParcelOverrideObjectDesc = 'Create overrides of the selected objects.'ParcelRemove = 'Parcel Remove'ParcelRemoveChanges = 'Parcel Remove Changes'ParcelRemoveChangesDesc = 'Remove the items in the change set contained in the selected parcel'ParcelRemoveDesc = 'Unload and remove the parcel'ParcelRemoveFromChanges = 'Parcel Remove from Changes'ParcelRemoveFromChangesDesc = 'Remove the selected parcel''s contents from the change set'ParcelRename = 'Parcel Rename'ParcelRenameDesc = 'Rename the selected parcel'Parcels = 'Parcels'ParcelSave = 'Parcel Save'ParcelSaveDesc = 'Save the selected parcel'ParcelSourceIsHidden = 'Parcel source is hidden. Cannot determine changed methods'ParcelUnload = 'Parcel Unload'ParcelUnloadDesc = 'Unload the selected parcel'ParentMustBeSequence = 'Parent node must be a sequence node.'Passed = 'Passed'Paste = 'Paste'PasteSelection = 'Paste Selection'PossibleBugs = 'Possible bugs'PossibleCallTo2sFrom1pBrowseQ = 'Possible call to <2s> in <1p><n>Browse references?'PossibleMissingYourself = 'Possible missing "; yourself"'PossibleThreeElementPoint = 'Possible three element point (e.g., x @ y + q @ r)'PossiblyIncorrectBooleanPrecedence = 'Uses A | B = C instead of A | (B = C)'PossiblyWrongPrecedence = 'Inspect instances of "A + B * C" might be "A + (B * C)"'PostLoad = 'Post-load'PostUnload = 'Post-unload 'PreLoad = 'Pre-load'PreRead = 'Pre-read'PrerequisitesC = 'Prerequisites:'PrerequisiteVersionSelection = 'Prerequisite Version Selection'PreSave = 'Pre-save'PreUnload = 'Pre-unload'PrintIt = 'Print It'PrintItDesc = 'Evaluate the selected text and print the result'Pri_ntIt = 'Pri&nt it'ProfilerNotLoadedLoad = 'Profiler not loaded. Load the "AT Profiling" parcel.'ProtectClassInstanceVariable = 'Protect Class Instance Variable'ProtectClassInstanceVariableDesc = 'Convert from indirect to direct class instance variable access, removing all accessing methods that are no longer used'ProtectedKey = 'Protected Key: <1s>'ProtectInstanceVariable = 'Protect Instance Variable'ProtectInstanceVariableDesc = 'Convert from indirect to direct instance variable access, removing all accessing methods that are no longer used'ProtectSelectedInstanceVariable = 'Protect Selected Instance Variable'ProtectSelectedInstanceVariableDesc = 'Convert abstract variable references to direct references for the selected instance variable'ProtocolsContainInvisibleMethodsContinueQ = 'These protocols contain methods that are not currently visible.Removing the protocols will remove those methods. Continue?'PublishAsParcelDots = 'Publish as Parcel...'PublishDots = 'Publish...'Pull_Up = 'Pull &Up'PushDownClassInstanceVariable = 'Push Down Class Instance Variable'PushDownClassInstanceVariableDesc = 'Move the class instance variable''s definition to the subclasses that reference it'PushDownInstanceVariable = 'Push Down Instance Variable'PushDownInstanceVariableDesc = 'Move the instance variable''s definition to the subclasses that reference it'PushDownMethod = 'Push Down Method'PushDownMethodDesc = 'Move the selected method to the selected class'' subclasses'PushDownSelectedInstanceVariable = 'Push Down Selected Instance Variable'PushDownSelectedInstanceVariableDesc = 'Move the selected instance variable definition to all subclasses'PushingDownWillRemoveVariableProceedQ = 'None of the subclasses use this variable.<n>Pushing down will remove it. Proceed?'PushUpClassInstanceVariable = 'Push Up Class Instance Variable'PushUpClassInstanceVariableDesc = 'Move the class instance variable definition to the selected class'' superclass'PushUpInstanceVariable = 'Push Up Instance Variable'PushUpInstanceVariableDesc = 'Move the instance variable definition to the selected class'' superclass'PushUpMethod = 'Push Up Method'PushUpMethodDesc = 'Move the selected method to the selected class'' superclass'PushUpSelectedInstanceVariable = 'Push Up Selected Instance Variable'PushUpSelectedInstanceVariableDesc = 'Move the selected instance variable to the superclass'PushVariable_Up = 'Push Variable &Up'Push_Down = 'Push &Down'Push_DownDots = 'Push &Down...'Push_Up = 'Push &Up'Push_UpDots = 'Push &Up...'P_arcel = 'P&arcel'ReadersOf1sIn2s = 'Readers of ''<1s>'' in <2s>'RecategorizeMethods = 'Recategorize methods'RecategorizeVariables = 'Recategorize variables'ReceiverC = 'Receiver:'Reconcile = 'Reconcile'ReconcileWithDatabase = 'Reconcile with Database'Redo = 'Redo'RedoDesc = 'Redo the last undo operation'RedundantClassName = 'Redundant class name in selector'Refactor = 'Refactor'RefactoringAborted = 'Refactoring aborted'RefactoringBrowserHelp = 'Refactoring Browser Help'References = 'References'ReferencesAnAbstractClass = 'References an abstract class'ReferencesDesc = 'Browse all references to the specified shared variable'ReferencesTo1s = 'References to: <1s>'ReferencesTo1sIn2s = 'References to ''<1s>'' in <2s>'ReferencesToClassOrGlobal = 'References to Class or Global'ReferencesToClassOrGlobalDesc = 'Find references to a class or shared variable within the current scope of the browser'ReferencesToDefinedClasses = 'References to Defined Classes'ReferencesToDefinedClassesIn1s = 'References to defined classes in <1s>'ReferencesToSymbol = 'References to Symbol'ReferencesToSymbolDesc = 'Find references to a symbol within the current scope of the browser'ReferencesToSymbolDots = 'References to Symbol...'ReferencesUndeclaredVariable = 'References an undeclared variable'RefersToClassName = 'Refers to class name instead of "self class"'Refresh = 'Refresh'RegularExpression = 'Regular Expression'RegularExpressionTransformations = 'Regular Expression Transformations'ReinitializeBindings = 'Reinitialize Bindings'ReinitializeBindingsDesc = 'Reinitialize all selected bindings'Remove = 'Remove'RemoveActionSpecification = 'Remove Action Specification'RemoveActionSpecificationDesc = 'Remove an action specification'RemoveAllClassesAndSharedInSelectedCategoriesQ = 'Are you certain that you want to remove all classes and shared variables in the selected categories?'RemoveAllImplementors = 'Remove All Implementors'RemoveAllSelectedObjectsQ = 'Are you certain that you want to remove all selected objects?'RemoveAllSelectedVarsQ = 'Are you certain that you want to remove all selected variables?'RemoveAllSenders = 'Remove All Senders'RemoveBuffer = 'Remove Buffer'RemoveBufferDesc = 'Remove the current buffer'RemoveCategory1 = 'Remove category'RemoveClass = 'Remove Class'RemoveClass1s = 'Remove class <1s>'RemoveClassInstanceVariable = 'Remove Class Instance Variable'RemoveClassInstanceVariableDesc = 'Remove a class instance variable if it is not referenced'RemoveDuplicateSubclassMethodsQ = 'Subclasses of the target class have duplicate copies of this method.<n>Pushing up the method will remove the copies. Proceed?'RemoveEmptyCategoriesAndPurgeQ = 'Remove empty categories and purge Undeclared?'RemoveFromList = 'Remove From List'RemoveFromSystem = 'Remove from System'RemoveInstanceVariable = 'Remove Instance Variable'RemoveInstanceVariableDesc = 'Remove an instance variable if it is not referenced'RemoveInstVar1sFrom2s = 'Remove instance variable named, <1s>, from <2s>'RemoveMethod = 'Remove Method'RemoveMethod2s1s = 'Remove method, <2s>>><1s>'RemoveMethodDesc = 'Remove the selected methods'RemoveMethodFromList = 'Remove Method From List'RemoveMethodFromListDesc = 'Removes the selected methods and shared variables from the list of items.'RemoveMethods = 'Remove methods'RemoveNameSpace = 'Remove Name Space'RemoveNameSpace1s = 'Remove name space <1s>'RemoveObject = 'Remove Object'RemoveObjectDesc = 'Remove the selected shared variables, name spaces, or classes, including their subclasses'RemoveOverriddenDots = 'Remove Overridden...'RemoveOverrideFor1s = 'Remove Override for <1s>'RemoveOverrideMethod = 'Remove Override Method'RemoveOverrideMethodDesc = 'Remove a method override'RemoveOverrideObject = 'Remove Override Object'RemoveOverrideObjectDesc = 'Remove an object override from the system'RemoveParameter = 'Remove Parameter'RemoveParameterDesc = 'Remove the selected argument from the method if all implementors of the method do not use the argument'RemoveParameterDots = 'Remove Parameter...'RemoveParenUnload = 'Remove (Unload)'RemoveProtocol = 'Remove Protocol'RemoveProtocol1 = 'Remove protocol'RemoveProtocolDesc = 'Remove the selected protocol and all of its methods'RemoveSelectedInstanceVariable = 'Remove Selected Instance Variable'RemoveSelectedInstanceVariableDesc = 'Remove the selected instance variable if there are no references to it'RemoveSelectedParameter = 'Remove Selected Parameter'RemoveSelectedParameterDesc = 'Remove the selected parameter from the method (if it is unused), modifying all callers'RemoveSelectedProtocolsAndMethodsQ = 'Remove the selected protocols and their methods?'RemoveSharedVariable = 'Remove Shared Variable'RemoveSharedVariable1s = 'Remove shared variable <1s>'RemoveSharedVariableDesc = 'Remove the selected variables whether or not there are references to them'RemoveStatic = 'Remove Static'RemoveStaticDesc = 'Remove the selected shared variable'RemoveSubclasses = 'Remove Subclasses'RemoveSuperclasses = 'Remove Superclasses'RemoveThe1pSelectedMethodsQ = 'Remove the <1p> selected methods?'RemoveTheMethod1sQ = 'Remove the method #<1s>?'Remove_fromChanges = 'Remove &from Changes'Rename1sTo2s = 'Rename <1s> to <2s>'RenameClassInstanceVariable = 'Rename Class Instance Variable'RenameClassInstanceVariableDesc = 'Rename a class instance variable and all its references'RenameDots = 'Rename...'RenameInstanceVariable = 'Rename Instance Variable'RenameInstanceVariableDesc = 'Rename an instance variable and all its references'RenameInstVar1sTo2sFor3s = 'Rename instance variable named <1s> to <2s> for <3s>'RenameMethod = 'Rename Method'RenameMethodDesc = 'Rename a method and all of its senders'RenameObject = 'Rename Object'RenameObjectDesc = 'Rename a class, name space, or shared variable and all references to it'RenameProtocol = 'Rename Protocol'RenameProtocol1 = 'Rename protocol'RenameProtocol1sTo2sIn3s = 'Rename protocol, <1s>, to <2s> in <3s>'RenameProtocolDesc = 'Rename the selected protocol'RenameSelectedInstanceVariable = 'Rename Selected Instance Variable'RenameSelectedInstanceVariableDesc = 'Rename the selected instance variable'RenameSelectedTemporaryVariable = 'Rename Selected Temporary Variable'RenameSharedVariable = 'Rename Shared Variable'RenameSharedVariableDesc = 'Rename the selected shared variable and all references to it'RenameTemporaryVariable = 'Rename Temporary Variable'RenameTemporaryVariableDesc = 'Rename the selected temporary variable and all references to it'ReplaceDots = 'Replace...'ReplaceInitializersCommentText = ' *** Replace this comment with the appropriate initialization code *** 'ReplaceText = 'Replace Text'ReplaceTextDesc = 'Search and replace text'ReplaceThisWithStoredVersionQ = 'Do you want to replace this with the stored version?'ReplaceWithC = 'Replace with:'ReplicateToDots = 'Replicate to...'Replicating = 'Replicating'RestoreDefault = 'Restore Default'RestoreDots = 'Restore...'RestoreOverridden = 'Restore Overridden'RestoreOverriddenDots = 'Restore Overridden...'RestoreOverrideFor1s = 'Restore Override for <1s>'RestoreOverrideMethod = 'Restore Override Method'RestoreOverrideMethodDesc = 'Restore an overridden method'RestoreOverrideObject = 'Restore Override Object'RestoreOverrideObjectDesc = 'Restore an object override from the system'RestoreSelectedOverride = 'Restore Selected Override'RestoreSelectedOverrideDesc = 'Restores the selected override.'ResultingPattern = 'Resulting pattern'Results = 'Results'ResultsFoundColon1p = 'Results found: <1p>.'ReturnInEnsureColon = 'Contains a return in an ensure: block'ReturnNodeMustBeLast = 'Return node must be last.'ReturnsABooleanAndNot = 'Returns a boolean and non boolean'ReturnsValueOfAsymmetricConditional = 'Returns value of ifTrue:/ifFalse: without ifFalse:/ifTrue: block'RevertDots = 'Revert...'RevertToLastPublishedVersionQ = 'Revert this method to the last published version?'RewriterReplace = 'Rewriter Replace'RewriterReplaceDesc = 'Replace using parse trees.'RewriterSearch = 'Rewriter Search'RewriterSearchDesc = 'Search for a matching parse tree.'RewriteSuperMessagesToSelf = 'Rewrite super messages to self messages when both refer to same method'RewriteToolQuickHelpList = '@ = list'RewriteToolQuickHelpLiteral = '# = literal'RewriteToolQuickHelpMetaVar = '` = meta var'RewriteToolQuickHelpRecurseInto = '` = recurse into'RewriteToolQuickHelpStatement = '. = statement'RewriteUsingMinMax = 'Rewrite ifTrue:ifFalse: using min:/max:'Re_ferences = 'Re&ferences'Re_fresh = 'Re&fresh'Re_move = 'Re&move'Re_nameAsDots = 'Re&name As...'Re_nameDots = 'Re&name...'Re_nameVariableAsDots = 'Re&name Variable As...'Run = 'Run'Running = 'Running'RunningDots = 'Running...'RunningRuleDots = 'Running rule...'SafeRemoveMethod = 'Safe Remove Method'SafeRemoveMethodDesc = 'Remove the selected methods if there are no references to them'SafeRemoveObject = 'Safe Remove Object'SafeRemoveObjectDesc = 'Remove the selected classes only if there are no references to them'SafeRemoveSharedVariable = 'Safe Remove Shared Variable'SafeRemoveSharedVariableDesc = 'Remove the selected variables if there are no references to them'SameAssignmentInConditionals = 'Assignment to same variable at end of ifTrue:ifFalse: blocks'SaveAutoFormatHelp = 'Automatically format code when saving (accepting).'SaveAutoFormatLabel = 'Save Auto Formats?'SaveFile = 'Save File'SaveFiltersDots = 'Save Filters...'SaveMethod = 'Save Method'SaveRemoveScriptToFileNamed = 'Save remove script to file named?'SearchDots = 'Search...'SearchFor1s = 'Search for: <1s>'SearchForC = 'Search for:'SelectADatabaseToReplicateToC = 'Select a database to replicate to:'SelectAMessageC = 'Select a message:'SelectAParameter = 'Select a parameter!'SelectBuffer = 'Select Buffer'SelectBuffer1 = 'Select buffer'SelectClassesToMoveToC = 'Select classes to move to:'SelectClassToExtend = 'Select Class to Extend'SelectedGlobalInstanceVariableReaders = 'Selected Global Instance Variable Readers'SelectedGlobalInstanceVariableReferences = 'Selected Global Instance Variable References'SelectedGlobalInstanceVariableWriters = 'Selected Global Instance Variable Writers'SelectedInstanceVariableReadersDesc = 'Browse all methods accessing the selected instance variable'SelectedInstanceVariableReferencesDesc = 'Browse all methods referring to the selected instance variable'SelectedInstanceVariableWritersDesc = 'Browse all methods modifying the selected instance variable'SelectedMessageGlobalImplementors = 'Selected Message Global Implementors'SelectedMessageGlobalSenders = 'Selected Message Global Senders'SelectedMessageImplementors = 'Selected Message Implementors'SelectedMessageImplementorsDesc = 'Browse all implementors of the selected message'SelectedMessageReferences = 'Selected Message References'SelectedMessageSendersDesc = 'Browse all senders of the selected message'SelectedToPackageDots = 'Selected to Package...'SelectedToParcelDots = 'Selected to Parcel...'SelectInstanceVariableC = 'Select instance variable:'SelectionDoesNotLookLikeAssignment = 'The selection does not appear to be an assignment'SelectionIsNotAssignment = 'The selected node is not an assignment statement'SelectionNotMessageSend = 'The selection doesn''t appear to be a message send'SelectNavigatorType = 'Select Navigator Type'SelectorC = 'Selector:'Selectors1QEquivalent = 'The selectors are <1?:not >equivalent'SelectPackageToMoveToC = 'Select package to move to:'SelectPackageToOverrideInC = 'Select package to override in:'SelectParcelToMoveToC = 'Select parcel to move to:'SelectProtocolsMatching = 'Select protocols matching:'SelectSelectorsMatching = 'Select selectors matching:'SelectSomeCodeToExtract = 'Select some code to extract'SelectTool = 'Select Tool'SelectVariableC = 'Select variable:'SelectVariableToMoveMethod = 'Select variable to move method into:'SelectVariableType = 'Select variable type'Senders = 'Senders'SendersActionsDesc = 'Actions for Senders'SendersDesc = 'Browse all senders of the selected method'SendersImplementors = 'Senders/Implementors'SendsAddRemoveToExternalCollection = 'Sends add:/remove: to external collection'SendsDifferentSuperMessage = 'Sends different super message'SendsQuestionableMessage = 'Sends "questionable" message'SetAsCurrent = 'Set as Current'SetBlessingLevel = 'Set Blessing Level'SetDefaultNameSpace = 'Set Default Name Space'SetDefaultNameSpaceDesc = 'Set the default name space to be displayed when a browser is opened'SharedVariable = 'Share'SharedVariableCSpace = 'Shared Variable: 'SharedVariableDots = 'Shared Variable...'SharedVariableTemplate = 'Shared Variable Template'SharedVariableTemplateDesc = 'Display a template for creating a shared variable'ShowAllExceptObject = 'Show All Except for Object'ShowAllInherited = 'Show All Inherited'ShowAllSubsystems = 'Show All'ShowNoInherited = 'Show No Inherited'ShowOnlyFiltered = 'Show Only Filtered'ShowOnlyFilteredDesc = 'Show only methods and shared variables within the selected Parcels/Packages'ShowOnlyInSelectedPackage = 'Show Only In Selected Package'ShowOnlyInSelectedParcel = 'Show Only In Selected Parcel'ShowOnlyItemsInSelectedComponents = 'Show only items in the selected code components'ShowOverrideDiffs = 'Show Override Diffs'ShowOverrideDiffsDesc = 'Show source differences between the override and the image'Smalllint = 'Smalllint'SmalllintClearFilters = 'Smalllint Clear Filters'SmalllintClearFiltersDesc = 'Clear Smalllint filter list.'SmalllintFilterClass = 'Smalllint Filter Class'SmalllintFilterClassDesc = 'Add the selected class to the Smalllint rules ignore list'SmalllintFilterSelector = 'Smalllint Filter Selector'SmalllintFilterSelectorDesc = 'Add the selected methods to the Smalllint rules ignore list'SmalllintLoadFilters = 'Smalllint Load Filters'SmalllintLoadFiltersDesc = 'Load Smalllint filters from a file.'SmalllintResultsDash1s = 'Smalllint Results -- <1s>'SmalllintRuleTypeList = 'Smalllint Rule Type List'SmalllintRuleTypeListDesc = ''SmalllintSaveFilters = 'Smalllint Save Filters'SmalllintSaveFiltersDesc = 'Save Smalllint''s filters to a file.'SmalltalkCodeInCommentsConfirmation = 'This text looks like a Smalltalk method, but you are on the class comment tab.'SourceFor1sSuperNA = 'Source code for <1s> superclass method not available'SourcesCouldNotBeParsed = 'The sources could not be parsed'Spawn = 'Spawn'SpawnBrowser = 'Spawn Browser'SpawnBrowserDesc = 'Open a new browser'SpawnClass = 'Spawn Class'SpawnClassDesc = 'Browse only the selected classes'SpawnClassHierarchy = 'Spawn Class Hierarchy'SpawnClassHierarchyDesc = 'Browse only the selected class and its hierarchy'SpawnMethod = 'Spawn Method'SpawnMethodDesc = 'Browse only the selected methods'SpawnParcel = 'Spawn Parcel'SpawnParcelDesc = 'Browse the selected parcels'SpawnProtocol = 'Spawn Protocol'SpawnProtocolDesc = 'Browse the selected protocols'SpawnPundle = 'Spawn Pundle'SpawnPundleDesc = 'Browse the selected pundles'Spawn_Hierarchy = 'Spawn &Hierarchy'SpecExistsOverwriteQ = 'A specification with that name already exists. Overwrite?'SpecificImport = 'Specific Import'StandardProtocolNotUsed = 'Uses "size = 0", "= nil",  or "at: 1" instead of "isEmpty",  "isNil", or "first"'StartupOrderingTool = 'System Startup Ordering Tool'StaticReferences = 'Static References'StaticReferencesDesc = 'Browse all references to the selected shared variable'Store = 'Store'StoreAction = 'Store action'StoreAllDatabasesBrowseChanges = 'Store All Databases Browse Changes'StoreAllDatabasesBrowseChangesDesc = ''StoreAllDatabasesChangeList = 'Store All Databases Change List'StoreAllDatabasesChangeListDesc = ''StoreAllDatabasesFileoutChanges = 'Store All Databases Fileout Changes'StoreAllDatabasesFileoutChangesDesc = ''StoreAllDatabasesInspectChanges = 'Store All Databases Inspect Changes'StoreAllDatabasesInspectChangesDesc = ''StoreBrowseClassVersions = 'Store Browse Class Versions'StoreBrowseClassVersionsDesc = 'Browse all versions of the selected class in the repository'StoreBrowseMethodChanges = 'Store Browse Method Changes'StoreBrowseMethodChangesDesc = 'Browse the methods in the repository that have been changed'StoreBrowseMethodVersions = 'Store Browse Method Versions'StoreBrowseMethodVersionsDesc = 'Browse the methods that have been changed'StoreBrowsePundleVersions = 'Store Browse Pundle Versions'StoreBrowsePundleVersionsDesc = 'Browse all versions of the selected method in the repository'StoreBrowseRemovedMethods = 'Store Browse Removed Methods'StoreBrowseRemovedMethodsDesc = 'Browse all methods stored in the repository for this class that are not loaded'StoreBrowseSharedVariableVersions = 'Store Browse Shared Variable Versions'StoreBrowseSharedVariableVersionsDesc = 'Browse all versions of the shared variable stored in the repository'StoreChangeListOnChanges = 'Store Change List on Changes'StoreChangeListOnChangesDesc = 'Open a change list for the selected package'StoreCompareClassVersion = 'Store Compare Class Version'StoreCompareClassVersionDesc = 'Browse differences between the loaded class and a version in the repository'StoreCompareMethodVersions = 'Store Compare Method Versions'StoreCompareMethodVersionsDesc = 'Browse differences between the selected method and another version of it'StoreComparePundleVersions = 'Store Compare Pundle Versions'StoreComparePundleVersionsDesc = 'Browse differences between the selected item and an item in the repository'StoreComparePundleWithParent = 'Store Compare Pundle with Parent'StoreComparePundleWithParentDesc = 'Browse differences between the selected item and its parent'StoreCompareSharedVariableVersions = 'Store Compare Shared Variable Versions'StoreCompareSharedVariableVersionsDesc = 'Browse differences between the selected shared variable and another version of it'StoreEditBundle = 'Store Edit Bundle'StoreEditBundleDesc = 'Edit the bundle''s specification'StoreExtendClassInPackage = 'Store Extend Class in Package'StoreExtendClassInPackageDesc = 'Create an extension of a class or name space in a new package.'StoreFilein = 'Store File-in'StoreFileinDesc = 'Load Smalltalk source, compiling it into the selected package'StoreFileoutPundle = 'Store File-out Pundle'StoreFileoutPundleChanges = 'Store File-out Pundle Changes'StoreFileoutPundleChangesDesc = 'Save the Smalltalk source for the changes in the selected item'StoreFileoutPundleDesc = 'Save the Smalltalk source of the selected item as a file-out'StoreFileoutPundleDifferences = 'Store File-out Pundle Differences'StoreFileoutPundleDifferencesDesc = 'Save the Smalltalk source for the differences between selected item versions'StoreInspectChangeSet = 'Store Inspect Change Set'StoreInspectChangeSetDesc = 'Inspect the change set of the selected packages'StoreLoadAnotherPundle = 'Store Load Another Pundle'StoreLoadAnotherPundleDesc = 'Load a package or bundle from the repository'StoreLoadPundle = 'Store Load Pundle'StoreLoadPundleDesc = 'Load another version of the selected item'StoreMakeCurrent = 'Store Make Current'StoreMakeCurrentDesc = 'Make the selected package the default package for new source'StoreNewClassExtension = 'Store New Class Extension'StoreNewClassExtensionDesc = 'Create a new class extension in the selected package'StoreOverrideMethod = 'Store Override Method'StoreOverrideMethodDesc = 'Create an override for the selected method(s) or shared variable(s)'StoreOverrideObject = 'Store Override Object'StoreOverrideObjectDesc = 'Create an override for the selected object(s)'StorePublish = 'Store Publish'StorePublishDesc = 'Publish the selected item to the repository'StorePublishParcel = 'Store Publish Parcel'StorePublishParcelDesc = 'Publish the selected item as a parcel'StorePundleProperties = 'Store Pundle Properties'StorePundlePropertiesDesc = 'Open the selected component''s properties dialog'StoreReconcilePundle = 'Store Reconcile Pundle'StoreReconcilePundleDesc = 'Reconcile the selected package with the database'StoreRenamePundle = 'Store Rename Pundle'StoreRenamePundleDesc = 'Rename the selected item'StoreRevertMethod = 'Store Revert Method'StoreRevertMethodDesc = 'Load the version of the method stored in the repository for this package version'StoreRevertSharedVariable = 'Store Revert Shared Variable'StoreRevertSharedVariableDesc = 'Load the version of the shared variable stored in the repository for this package version'StoreUnloadPundle = 'Store Unload Pundle'StoreUnloadPundleDesc = 'Unload the selected item'SubclassDoesNotDefineCopyEmpty = 'Subclass of collection that has instance variable but doesn''t define copyEmpty'SubclassesMustImplementTheseC = 'Subclasses must implement the following messages:'SubclassesOfDefinedClasses = 'Subclasses of Defined Classes'SubclassesOfDefinedClassesIn1s = 'Subclasses of defined classes in <1s>'SubclassResponsibilityStubComment = ' *** This method was defined by <1p> as a subclass responsibility.<n><t>Replace its body with a proper implementation. *** 'SubclassResponsibilityStubNotReimplemented = 'Subclass responsibility stub not reimplemented'SubMust1QBeMeta = 'Subclass must <1?not :>be a metaclass'SubsystemStartupOrdering = 'Startup Order'SuggestionsC = 'Suggestions:'SuperMustNotBeMeta = 'Superclass must not be a metaclass'S_afeRemove = 'S&afe Remove'TagCloseExpected = 'expected >'TagLiteralExpected = 'Literal constant expected'TagTokenExpected = 'Unary or keword expected'TempsReadBeforeWritten = 'Temporaries read before written'TestsRemaining1p = 'Tests Remaining : <1p>'ThisClassHasNoSuperclass = 'This class has no superclass'ThisNameSpaceHasNotBeenCommented = 'This name space has not been commented.'ThisNodeHasNoParent = 'This node doesn''t have a parent'ThisObjectHasNotBeenCommented = 'This object has not been commented.'todoDoesntUseCollect = 'to:do: doesn''t use collect:'toDoLoopIncrementsCounter = 'to:do: loop also increments a counter'toggleStatusBar = 'Status Bar'ToggleToolbar = 'Toggle Toolbar'ToggleToolbarDesc = 'Toggle the toolbar on all browsers'toNamespaceDots = 'to Namespace...'Toolbar = 'Toolbar'Tools = 'Tools'toPackageDots = 'to Package...'toParcelDots = 'to Parcel...'to_ComponentDots = 'to &Component...'to_ParcelDots = 'to &Parcel...'to_ProtocolDots = 'to &Protocol...'Traditional = 'Traditional'TransformationRules = 'Transformation Rules'Transformations = 'Transformations'TypeC = 'Type:'UIPainterNotLoaded = 'UIPainter not loaded.'unabelToGuessCodeToolPrompt = 'Unable to guess the CodeTool to adopt the receiver''s behaviorSee CodeToolSelectionPolicy comments.'UnableToLocateNode = 'Unable to locate node in parse tree'UncheckAllImplementors = 'Uncheck All Implementors'UncheckAllImplementorsDesc = 'Remove all implementors of the selected method from the item list'UncheckAllMethods = 'Uncheck All Methods'UncheckAllMethodsDesc = 'Remove all methods matching a pattern from the item list'UncheckAllProtocols = 'Uncheck All Protocols'UncheckAllProtocolsDesc = 'Remove all protocols matching a pattern from the item list'UncheckAllSenders = 'Uncheck All Senders'UncheckAllSendersDesc = 'Remove all senders of the selected method from the item list'UncheckAllSubclasses = 'Uncheck All Subclasses'UncheckAllSubclassesDesc = 'Remove all the class'' subclasses from the item list'UncheckAllSuperclasses = 'Uncheck All Superclasses'UncheckAllSuperclassesDesc = 'Remove all the class'' superclasses from the item list'UncheckClass = 'Uncheck Class'UncheckClassDesc = 'Remove the selected class from the item list'UncheckMethod = 'Uncheck Method'UncheckMethodDesc = 'Remove the selected methods from the item list'UncheckProtocol = 'Uncheck Protocol'UncheckProtocolDesc = 'Remove the selected protocols from the item list'Undo = 'Undo'UndoDesc = 'Undo the last action'UndoTyping = 'Undo Typing'UnknownCharacter = 'Unknown character'UnknownCodeComponent = 'Unknown code component'unknownDefinitionType = 'Unknown Definition Type'UnknownInputAtEnd = 'Unknown input at end'UnlabeledCanvas = 'Unlabeled Canvas'Unload1s = 'Unload<1s>?'UnloadAndDiscardParcelCodeQ = 'Really unload (and discard) the parcel''s code?'UnloadAndRemoveParcelCodeQ = 'Really unload (and remove) the parcel''s code?'UnloadDots = 'Unload...'UnloadingDots = 'Unloading...'UnmatchedQuoteInComment = 'Unmatched " in comment.'UnmatchedQuoteInString = 'Unmatched '' in string literal.'UnnecessaryAssignmentInBlock = 'Unnecessary assignment or return in block'UnnecessaryCode = 'Unnecessary code'UnnecessaryEqTrue = 'Unnecessary "= true"'UnnecessarySizeCheck = 'Unnecessary size check'UnnecessaryTempAssignment = 'Unnecessary assignment to a temporary variable'UnoptimizedAndOr = 'Uses "(a and: [b]) and: [c]" instead of "a and: [b and: [c]]"'UnoptimizedToDo = 'Uses (to:)do: instead of to:do:'UnparceledMethodsInDefinedClasses = 'Unparceled Methods in Defined Classes'UnparceledMethodsUsedExclusively = 'Unparceled Methods Used Exclusively'UnparceledParcelComment = 'This "parcel" holds all classes/methods/name spaces/shared variables that are not in a parcel. It is not a normal parcel, but is dynamically calculated.'UnparcelledMethodsInClassesDefinedIn1s = 'Unparcelled methods in classes defined in <1s>'UpdateCodeToolDisplay = 'Update Code Tool Display'UpdateCodeToolDisplayDesc = 'Update the display'UpdateNavigator = 'Update Navigator'UpdateNavigatorDesc = 'Refresh the navigator from the current image'UseBetweenAnd = '"a >= b and: [a <= c]" -> "a between: b and: c"'UseCascadedNextPutsAlls = 'Use cascaded nextPutAll:''s instead of #, in #nextPutAll:'UseExistingMethod1sQ = 'Use existing method <1s> instead of creating new method?'UseInitializersBelowCommentText = ' *** Edit the following to properly initialize instance variables ***'UseIsNilOrNotNil = '= nil -> isNil AND ~= nil -> notNil'UserC1sTimeC2s = 'User: <1s>; Time: <2s>'UsesAtIfAbsent = 'Uses at:ifAbsent: instead of at:ifAbsentPut:'UsesBooleanClasses = 'Uses True/False instead of true/false'UsesResultOfAdd = 'Uses the result of an add: message'UtilityMethods = 'Utility methods'VarDefinedTryAnotherQ = 'The variable is already defined in one of the classes you''re moving the method to.<n>Try another?'VariableAlreadyDefined = 'The variable is already defined by the class'VariableAlreadyTight = 'Variable already bound as tightly as possible'VariableAssignedSingleLiteral = 'Variable is only assigned a single literal value'VariableDoesNotLookLikeTemp = 'The variable does not appear to be a temporary variable.'VariableExpected = 'Variable expected'VariableIsAnArgument = 'Variable is an argument'VariableNameExpected = 'Variable name expected'VariableNavigatorPullUpVariable = 'Variable Navigator Pull Up Variable'VariableNavigatorPullUpVariableDesc = 'Move the selected variable into the superclass'VariableNavigatorRemoveVariable = 'Variable Navigator Remove Variable'VariableNavigatorRemoveVariableDesc = 'Remove the selected variable if there are no references to it'VariablePossiblyReadBeforeWrite = 'Variable is possibly read before written'VariableReadBeforeAssigned = 'The variable is possible read before it is assigned'VarNameInvalidTryAgainQ = 'The variable name is not a valid Smalltalk temporary variable name<n>Try again?'VarUsedButNotDefined = 'Variable used, but not defined anywhere'VersionC = 'Version:'VersionCSpace = 'Version: 'VersionHistory = 'Version History'VersionTool = 'Version Tool'View = 'View'ViewSubmenu = 'View submenu'Visibility = 'Visibility'WarningSuppression = 'Warning Suppression'WhichImpToInline = 'Which implementation should be inlined?'WhichPackage = 'Which package 'whileTrueInsteadOfToDo = 'Uses whileTrue: instead of to:do:'WillModify1pImplementors = 'This will modify all <1p> implementors.'WritersOf1sIn2s = 'Writers of ''<1s>'' in <2s>'x1IsReferencedBrowseQ = '<1s> is referenced.%<n%>Browse references?'x1noORaSubclassRefersTo2s = '%<1?:no:a%> subclass of <1s> refers to <2s>'x1p1sIsPrimitive = '<1p>''s implementation of #<2s> is a primitive'x1p2sOverriddenInlineQ = '<1p>>><2s> is overridden. Do you want to inline it anyway?'x1pAlreadyDefinesVar2s = '<1p> already defines a variable called <2s>'x1pDefinesInstVar2s = '<1p> defines an instance variable named <2s>'x1pDoesNotContainMethod2s = '<1p> or its superclasses don''t contain method <2s>'x1pIsOverridden = '<1p> is overridden'x1pMessageSendsWereNotReplaced = '<1p> message sends were not replaced'x1QPassedORFailed2pRun3pFailed4pErrors = '<1?Passed:Failed>: <2p> run, <3p> failed, <4p> errors'x1s = '<1s> -%>'x1s1doesNotReferenceInstVar2s = '<1s> %<1?:does not %>reference%<1?s:%> instance variable <2s>'x1sAlreadyDefinedAsTemp = '<1s> is already defined as a method or block temporary <n> variable in this class or one of its subclasses'x1sAlreadyDefinedInHierarchyOf2s = '<1s> is already defined in hierarchy of <2s>'x1sAlreadyExists = '<1s> already exists'x1sAlreadyExistsInScope = '<1s> already exists within the reference scope'x1sBlessingC2s = '<1s>; Blessing: <2s>'x1sC = '<1s>:'x1sDefinedBy2pTryAnotherQ = '<1s> is already defined by <2p> or a super/subclass<n>Try another?'x1sDefinedIn2pUseAnywayQ = '<1s> is already defined in the <2p> hierarchy.<n>Extracting it to an existing selector may change behavior.<n>Do you wish to use <1s> anyway?'x1sDefinesOtherObjects = '<1s> is not empty. It defines other shared variables, name spaces, or classes'x1sDoesNotHaveCorrectArgNum = '<1s> doesn''t have the correct number of arguments.'x1sDoesNotHaveProperArgNum = '<1s> doesn''t have the proper number of arguments.'x1sExistsORdoesnotInNameSpace = '<1s> %<1?already exists :does not exist %>in the name space'x1sHasDanglingRefsRemoveQ = '<1s> has dangling references.<n>Do you really want to remove the parcel''s code?'x1sHasDanglingRefsUnloadQ = '<1s> has dangling references.<n>Do you really want to unload the parcel''s code?'x1sHasQnoQsuperclass = '<1s> has %<1?a:no%> superclass'x1sHasSubclassesRemoveAnyway = '<1s> has subclasses. Remove anyway?'x1sIs1notASymbol = '<1s> is %<1?:not %>a symbol'x1sIs1notAValidClassName = '<1s> is %<1?:not %>a valid class name'x1sIs1notAValidInstVarName = '<1s> is %<1?:not %>a valid instance variable name'x1sIsABlockParameter = '<1s> is a block parameter'x1sIsAlreadyDefined = '<1s> is already defined'x1sIsAlreadyDefinedIn2pReplaceQ = '<1s> is already defined in <2p>.<n>Replace definition?'x1sIsAlreadyTempName = '<1s> is already a temporary variable name'x1sIsInvalidObjectName = '<1s> is not a valid object name'x1sIsInvalidSelector = '<1s> is not a valid selector name.'x1sIsInvalidTargetScope = '<1s> is not a valid move target'x1sIsInvalidTempName = '<1s> isn''t a valid temporary variable name'x1sIsInvalidVariableName = '<1s> does not seem to be a valid variable name.'x1sIsNotDefinedByMethod = '<1s> isn''t defined by the method'x1sIsNotEmptyRemoveAnyway = '<1s> is not empty. Remove anyway?'x1sIsNotLinkedToDatabaseReconcileQ = '<1s> is not linked to the current database.<n>It cannot be loaded until it has been reconciled.<n>Do you want to do that now?'x1sIsNotValidMethodName = '<1s> is %<1?:not %>a valid method name'x1sIsntAValidVariable = '<1s> isn''t a valid variable'x1sIsOverridden = '<1s> is overridden'x1sIsQnotQAbstract = '<1s> is %<1?:not %>an abstract class'x1sIsQnotQAMetaclass = '<1s> is %<1?:not %>a metaclass'x1sIsQnotQimmediateSubclassOf2s = '<1s> is %<1?:not %>an immediate subclass of <2s>'x1sIsReferenced = '<1s> is referenced.'x1sIsReferencedBrowseQ = '<1s> is referenced.<n>Browse references?'x1snDoYouWantToContinue = '<1s><n>Do you want to continue?'x1sNotDefinedIn2p = '<1s> doesn''t appear to be defined in <2p>'x1sNotFound = '<1s> not found'x1sNotPackaged = '<1s> Not packaged'x1sNProceedQ = '<1s><n>Do you want to proceed?'x1sOrSubclassDoesNotDefineVar2s = '<1s> or one of its subclasses %<1?:does not %>define%<1?s:%> variable <2s>'x1sOrSubclassQdoesnotQreferenceInstVar2s = '<1s> or subclass %<1?:does not %>reference%<1?s:%> instance variable <2s>'x1sQdefinesQInstVar2s = '<1s> %<1?:does not %>define%<1?s:%> instance variable <2s>'x1sQdoesnotdefineQ2s = '<1s> %<1?:does not %>define%<1?s:%> <2s>'x1sQdoesnotdefineQVariable2s = '<1s> %<1?:does not %>define%<1?s:%> variable <2s>'x1sQdoesnotdirectlydefineQinstVar2s = '<1s> %<1?:does not %>directly define%<1?s:%> instance variable <2s>'x1sQorsubclassORallsubclassesQdoNotUnderstand2s = '<1s> %<1?or a subclass:and all subclasses do not%> understand%<1?s:%> <2s>'x1sQundestandsQ2s = '<1s> %<1?:does not %>understand%<1?s:%> <2s>'x1sReadBeforeWrittenProceedQ = '<1s> is read before it is written.<n>Proceed anyway?'x1sRefersTo2sDefinedIn3s = '<1p> refers to <2s> which is defined in <3p>'x1srm = '<1s>.rm'x1sRunAll = '<1s> - Run all'x1sSendOverriddenSuperMessage = '<1s> sends super message that is overridden.'x1sst = '<1s>.st'Yes = 'Yes'YouHaventSelectedClasses = 'You haven''t selected any classes.<n>All selected items will have a check by them.'YourselfNotUsed = 'Doesn''t use the result of a yourself message'Zoom = 'Zoom'ZoomSpecifications = 'Zoom Specifications'ZoomSpecificationsDesc = 'The Zoom menu for the RB.'_Accept = '&Accept'_Add = '&Add'_AddAll = '&Add All...'_AddDots = '&Add...'_AddParameterDots = '&Add Parameter...'_AddVariableDots = '&Add Variable...'_Browser = '&Browser'_Class = '&Class'_ClassVariableNamespaceDots = '&Class/Variable/Name Space...'_ClearFilters = '&Clear Filters'_CodeCriticRules = '&Code Critic Rules'_ConvertToSiblingDots = '&Convert to Sibling...'_Copy = '&Copy'_CreateAccessorsDots = '&Create Accessors...'_DebugIt = '&Debug it'_DoIt = '&Do it'_Edit = '&Edit'_EditResourceDots = '&Edit Resource...'_ExtractMethod = '&Extract Method'_ExtractToTemporary = '&Extract to Temporary'_ExtractValueToTemporary = '&Extract Value to Temporary'_Filters = '&Filters'_Find = '&Find'_FindClass = '&Find Class'_FindClassDots = '&Find Class...'_FindDots = '&Find...'_FindMethodDot = '&Find Method...'_GenerateDefaultComment = '&Generate Default Comment'_Global = '&Global'_GlobalDots = '&Global...'_Implementors = '&Implementors'_InlineAllSelfSends = '&Inline All Self Sends'_InlineAssignedTemporary = '&Inline Assigned Temporary'_InspectAllInstances = '&Inspect All Instances'_InspectIt = '&Inspect it'_InstanceVariables = '&Instance Variables'_LoadDots = '&Load...'_LoadFiltersFromFile = '&Load Filters from File...'_Local = '&Local'_LocalDots = '&Local...'_Method = '&Method'_MethodDots = '&Method...'_MoreBuffers = '&More Buffers'_MoreSelectorsDots = '&More selectors...'_Move = '&Move'_NewDots = '&New...'_NewView = '&New View'_PackageDots = '&Package...'_Paste = '&Paste'_Protect = '&Protect'_ProtectDots = '&Protect...'_ProtectVariable = '&Protect Variable'_Protocol = '&Protocol'_Query = '&Query'_Readers = '&Readers'_ReadersDots = '&Readers...'_Redo = '&Redo'_Redo1s = '&Redo <1s>'_References = '&References'_ReferencesDots = '&References...'_Refresh = '&Refresh'_Remove = '&Remove'_RemoveAll = '&Remove All...'_RemoveChanges = '&Remove Changes'_RemoveCurrentView = '&Remove Current View'_RemoveDots = '&Remove...'_RemoveParameter = '&Remove Parameter'_RemoveVariableDots = '&Remove Variable...'_ReplaceDots = '&Replace...'_SafeRemoveDots = '&Safe Remove...'_SaveDots = '&Save...'_SaveFiltersToFile = '&Save Filters to File...'_Selector = '&Selector'_Senders = '&Senders'_Topics = '&Topics'_TransformationRules = '&Transformation Rules'_Undo = '&Undo'_Undo1s = '&Undo <1s>'_Variable = '&Variable'_View = '&View'_Writers = '&Writers'_WritersDots = '&Writers...'_Zoom = '&Zoom'