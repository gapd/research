encoding: #UTF_8catalog: #webservicesAccept = 'Accept'accept = 'Accept'acceptAll = 'Accept'AcceptSelection = 'Accept selection'AccessPoint = 'Access Point'AccessURL = 'Access URL'Add = 'Add'addAllFrom = 'Add all from...'addClass = 'Add class...'AddException = 'Add Exception'AddExceptionProcessor = 'Add Exception Processor'AddHeaderProcessor = '&Add Header Processor'AddHeaderProcessorAsInput = 'A&dd Header Processor as <&input>'AddHeaderProcessorAsOutput = 'Add &Header Processor as <o&utput>'AddHeaderProcessorsToOperation = 'Add Header Processors To Operations'AddHeaderProcessorsToOperations = 'Add Header Processors to Operations (Optional)'AddHeadersToOperationsHelp = 'This page allows you to add SOAP headers to operations and create header processors. A header processor serves two purposes:1. it''s a map between a Smalltalk type and Soap header node2. the procesor methods are invoked to process header entries for the operation by the Opentalk server or client classes. The top tree view dispays all Web Services Operations. The Operations tree view can include Input and Output Headers. The Operations tree view menu items:- Add Header...	* adds the input and(or) output header described by the selected processor to the operation. - Remove Header(s)	* removes operation headers- Edit	* edits the selected header processor The bottom tree view displays the Web Service Header Processors. The Header Processors tree view menu items:- Add New Header Processor	* creates a new header processor. The header processor type is created on the specified XML Schema targetNamespace.- Edit	* edits the selected header processor - Add to ....	* adds the input and(or) output header described by the selected processor to all or the selected operation. If you add SOAP headers to operations you will need to review and implement the following methods from header processors:- #processOutputHeader:reply:transport:  - processing reply header on the client side - #processInputHeader:transport:  - processing request header on the server side- #addOutputHeaderTo:transport:  - add reply headers to the soap message by a server- #addInputHeader:transport: - add request headers by a client The top right text panel shows a Smalltalk method corresponding the selected operation. If the operation has Soap headers the method includes <inputHeader> and <outputHeader> pragmas. The pragma parameters are the Header Processor names.The bottom text panel display detail information about the selected Header processor and Soap header node 'AddNewHeader = '&Add New Header Processor...'AddNewHeaderProcessor = 'Add New Header Processor'AddSuperclass = 'Add super class'AddSuperclassTypesWithTypes = 'Add the super class type only if it has type description'addToAllOperations = 'Add to all &operations'addToAllOperationsAsInput = 'Add to all operations as <&input>'addToAllOperationsAsOutput = 'Add to all operations as <&output>'AddToOperation = 'Add to o&peration'AddToSelectedOperationAsInput = 'Add to operation as <i&nput>'AddToSelectedOperationAsOutput = 'Add to operation as <o&utput>'Advandec = 'Advanced...'AllowDerivedTypes = 'Allow marshaling derived types in relations'AllowDerivedTypesHelpText = 'Setting this option to on will allow marshaling derived objects when a type is described with a superclass marshaler. The default option is false. An example:<object name="customer" ..><element name="address" ref="Address"/></object>The "Address" type  is supeclass for USAddress and UKAddress classes. Setting the option to on will allow using instances of USAddress and UKAddress to provide value for the address type and unmarshaling will return instances of USAddress or UKAddress. The option default is false and requires providing the instance of the Address class as a value and unmarshaling will return instances of the Address class.'AlwaysUseSuperclassType = 'Always add the super class type'and = ' and 'anyType = 'AnyType'Aspect = 'Aspect'AttributeFormDefault = 'Default Attribute Form'AttributeFormDefaultC = 'Default Attribute Form:'AttributeFormDefaultHelpText = 'The global XML schema attribute that indicates whether or not locally declared attributes must be set to "qualified" or "unqualified."'AttributeIsNotSimple = 'The <1s> is not a simple type. Can not convert to Simple Content type 'back = '< Back'BadRequest = 'Bad Request'BeforeUsingScriptAddCorrectImplementation = '"Before using this script, add correct implementation code to the service classes.'BindingClasses = 'Binding Classes'BindingDescription = 'Binding description for:'BindingKey = 'Binding Key'BindingName = 'Name'BindingNoMatchingOperationInPortType1s = 'Binding: no matching operation name in portType: <1s>'Bindings = 'Bindings'BindingType = 'Binding type'BindingTypeHelpText = 'Specifies the binding type for a WSDL schema. Currently, the only supported type is "soap" 'BindXMLType = 'Bind  XML Types to 'Browse = 'Browse...'BrowseFile = 'Browse file...'BrowseMethod = 'Browse method'BusinessKey = 'Business Key'BusinessLocation1 = 'Business location'BusinessName = 'Business Name'BusinessName1 = 'Business name'BusinessServices = 'Business Services'Cancel = 'Cancel'cancel = 'Cancel'CannotCreateMessageName = 'Can not create the message name'CannotCreateServerPragmas = 'Can not create server pragmas for: <1s>'CanNotEncodeNumber = 'Can not encode the number as XML decimal'CannotFindNamespaceForQualifier = 'Can not find namespace for: <1s>'CanNotParseBodyContents = 'Can not parse body contents'CanNotParseSimpleContent = 'Can not parse simple content'CanNotParseTheNode = 'Can not parse the node: <1s>'CanNotParseUnion = 'Can not parse union type'CanNotProcessNode = 'Can not process: <1s>'CannotResolveMessage1s = 'Can not resolve message: <1s>'CannotResolveRefToId = 'Can not resolve reference to id:  <1s>'CanNotResolveSimpleType = 'Can not resolve simple type: <1s>'CanNotResolveURI = 'Can not resolve URI'CanNotSetAspect = 'Can not set aspect'CantDecodeArithString = 'Can not decode <1s> expected: <2s>'CantDefineNamespace = 'Can not define namespace for: <1s>'CantDetectMarshalerInXMLObjectBinding = 'Can not detect marshaler in XMLObjectBinding>>detect:'CantDetectSuperMarshaler = 'Can not detect super marshaler'CantFindArrayInElement = 'Can not find array type in the element: <1s>'CantFindMarshalerFor = 'Can not find marshaler for <1s>'CantResolveAttribute1 = 'Can not resolve attribute type: <1s> in: <2s>  from: <3s> 'CantResolveKeyReference = 'Can''t resolve key reference'ChoiceOf = 'choice: 'ChoiceType = 'Choice type...'Class = 'Class: 'ClassAccessorHasUnderscores = 'If a schema element name has underscores:'Classes = 'Classes'ClassesBuilderSettings = 'Classes Builder Settings'ClassExistsInSystemDoYouWantToUse = 'The class <1s> is already in the system. Do you still want to use this name?'ClassNameIsNotSpecified = 'Class name is not specified'ClientClass = 'Client class'ClientClassExistExc = 'Error creating client class: <1s>. The class exists.'ClientClassNoPortExc = 'Error creating client class: <1s>. The wsdl schema doesn''t have a server url.'Collection = '[collection:<1s>]'CollectionType = 'Collection type'CollectionType1 = 'Collection type...'communication = ' communication"'ComplexType = 'Complex Type'Complextype = 'Complex type...'ComplexType1 = 'Complex type...'ConnectTo = 'Connect to'ContactDetails = 'Contact Details'Contactdetails = 'Contact details'Contacts = 'Contacts'Create = 'Create 'CreateApplicationFromWSDL = 'Create an application from a WSDL schema'CreateBindingClassesDialogHelp = 'The Create Binding classes dialog displays classes that will be generated from the XML to Object Binding specification. You can see the specificafion if you press "View X2O..." button.The left list column shows list of suggested class names as they are specified by the "smalltalkClass" attribute in the binding specification.The right list column allows to change the suggested class names.If there are the classes with number suffixes it indicates that these classes have duplicated bindings in the namespace specified by settings'CreateBindingForSchema = 'Create XML to object binding for schema data type'createBindingForSchemaHelpText = 'This option defines whether or not to create XML to object binding for schema data types. If this option is on the schema serializer will create, load and add the binding to a marshaling manager. By default the BindingBuilder class>>schemaParser creates default (to a dictionary) binding for XML complex types. The BindingBuilder class>>schemaParser can be set to create XML to object binding. This option can help to unmarshal DiffGram format (http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpcondiffgrams.asp)'CreateClassesFromWSDL = 'Create an application from a WSDL schema'CreatedOpentalkSOAPClient = 'Created Opentalk-SOAP client - 'CreatedOpentalkSOAPServer = 'Created Opentalk-SOAP server - 'CreateServerNamed = 'Create server named:'CreateServiceClasses = 'Create service classes'CreateXMLTypes = 'Create XML schema description'CreateXMLTypesHelp = 'Create XML schema description Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'CreatingXMLToObjectBinding = 'Creating XML To Object Binding'CreatingXMLToObjectBindingError = 'Creating XML to object binding error: <1s>'CtmTypeSystemClassNamespaceNotSetUp = 'CtmTypeSystem class namespace is not set up'DecodingAnyType = ' decoding anyType <1s>'Default1ClassNamespaceHelpText = 'The name space in which all classes that are generated from a WSDL schema are placed, by default. While generating a Wsdl schema the types are resolved in this name space 'defaultCategory = 'Default category'defaultCategoryHelpText = 'The category in which all classes that are generated from a WSDL schema are placed, by default.'DefaultClassNamespace = 'Default class namespace'DefaultClassNamespaceC = 'Default class namespace:'defaultDefaultProxyClientHelpText = 'The port number will be used in  #port method when the proxy client is created'DefaultPackage = 'Default package'DefaultPackageHelpText = 'The package in which all classes that are generated from a WSDL schema are placed, by default. If the package name does not exist in the system, it will be created. 'defaultProxyClientPort = 'Default proxy client port'DefaultQualifier = 'Default Qualifier:'defaultServiceProtocol = 'Default service protocol'defaultServiceProtocolHelpText = 'The protocol (class category) in which all web service interface stub methods are created, by default. While generating a Wsdl shema the methods from this protocol are used to create Wsdl operations'DefaultTargetNamespace = 'Default target namespace'DefaultTargetNamespaceHelpText = 'The URN for the default namespace of the service being defined by the target WSDL schema.'DescribeClassesAsXMLComplexTypesHelp = 'The classes in the list represent complex data types used to describe the parameters in the Port Type operations. These complex types will be included in the WSDL <types> element in an XML Schema and in an XML to object binding element. This page allows you to add or update attribute type descriptions for the complex types.A Caution symbol means that the class has unresolved types or this class doesn''t have attributes.Buttons:Description - Opens a dialog for adding XML attribute type descriptions. Add super class - Adds a superclass of the selected complex type, including the superclass as a complex type in the XML schema description. The selected complex type will have an extension element with the  superclass as its base attribute.Drop super class - Excludes the superclass of the selected type.	Add class - Adds a class to the XML schema complex types.Add all from - Adds all classes from the specified package to the XML shema complex typesDrop classes - Removes selected classes from the XML schema complex types.Settings - Allows XML to Object Binding and XML schema attributes to be set'DescribeComplexTypes = 'Describe complex types'DescribePortTypeOperations = 'Describe Port Type operations'DescribePortTypeOperationsHelp = 'This page allows you to select the class that will provide a service, and specify its interfaces. Interfaces must be in a single protocol (default: ''public api'') but may include interfaces from superclasses.	Service class - Click Select... to select the class that provides the service. In the dialog that is opened, you can either enter the class name or select the class by browsing packages or namespaces.Use methods in protocol - The wizard will represent the methods in one protocol as the access API for the service. The default protocol is "public api". You may select a different protocol from the drop-down list. Including super class - The access API can include superclass methods as well. To do so, select the superclass up to which methods are to be included. For these methods to be included in the WSDL schema, the Wsld Builder settings (Settings -> Wsdl Builder) must be set to "Add the service super class methods) is not set."WSDL target namespace - To specify the WSDL schema attribute: "targetNamespace"When the class and protocol are selected, a list of methods is displayed. Any method displayed with a Caution symbol needs to have its description set to specify unresolved parameters. Select the method and click Description...  To review the method''s source, click Source... 'Description = 'Description'Description1 = 'Description...'Destination = 'Destination'DetectedWrongObject = 'Detected a wrong object. Sending <1s> to <2s>'Dictionaries = 'Dictionaries'document = 'document'documentation = 'Documentation'DontUsePart1InSelector = 'Don''t use the first message part'DoYouWantToUpdateTheHeader = 'Do you want to update the header processors with the XML Schema targetNamespace: 'dropClass = 'Drop classes'DropSuperclass = 'Drop super class'DuplicateBindingsFoundFor1sFrom2s = 'Duplicate bindings have been found for "<1s>" from <2s>. The classes won''t be created if the exception proceeds. New classes will be created in <2s> if the exception resumes with #createAll parameter'DuplicateKey = 'Duplicate key <1s>'Edit = 'Edit'ElementFormDefault = 'Default Element Form'ElementFormDefaultC = 'Default Element Form:'ElementFormDefaultHelpText = 'The global XML schema attribute that indicates whether or not locally declared elements must be set to "qualified" or "unqualified."'EmptyBusinessName = 'Empty business name!'encoded = 'encoded'EncodingAnyType = ' encoding anyType <1s>'ErrorParsingXMLDoc = 'Error parsing XML document: <1s>'Exceptions = 'Exceptions'ExpectArrayTypeRef = 'Expect array type ref'ExpectAttributeNode = 'Expect attribute node'ExpectXMLNode = 'Expect XML node'ExposeApplicationAsService = 'Expose an application as a web service'FailedToResolveUpdateWSSettings = 'Failed to resolve: <1s> in <2s> Update Web Services Settings with correct default class namespace'FailedToUnmarshalForwardRef = 'Failed to unmarshal (forward reference?)'Fileout = 'File out'FindBusiness = 'Business Details'FinishingWebServicesWizard = 'Finishing the Web Services Wizard'ForDetailsReferToWSGuide = 'For details, please refer to the Web Services Developer''s Guide."'FromApplicationHelpText = 'This option helps you to 	describe web services interfaces,	describe types for interface parameters,	create a server class,	create a client class,	test client-server communication,	create a WSDL schema.'FromWSDLSchemaHelpText = 'This option helps you to 	find a WSDL schema in UDDI registries,	load a WSDL schema,	create Smalltalk classes from XML schema complex types,	create client classes,	create an server and service classes,	invoke web service requests.'Generate = 'Generate'generate = 'Generate'GenerateClass = 'Generate class'GenerateClasses = 'Generate Classes'GenerateClassesFromX2O = 'Generate classes from XML to object binding:'GeneratedByWSToolOn = 'Generated by WS Tool on 'GenerateOpentalkClientClass = 'Generate Opentalk client class'GenerateOpentalkProxyClientHelp = 'Check the Generate class box to generate an Opentalk proxy client class for this service. The Opentalk client provides the ability to start/stop the Opentalk broker and to invoke the web service from the server located at the specified server URL.Client class optionsName - the name for the client classPackage - the name of the containing packageName Space - the name of the containing name spaceConnect to sectionService URL - the URL at which the service will be requestedPort - the port on which the service will be offered'GenerateOpentalkServerHelp = 'This page specifies settings to generate an Opentalk-Soap server class from the pragma service descriptions.  A request broker maintains the necessary machinery to manage access to its services.  To generate the server class, check the Generate class box, then provide the settings.Server class section:Name - a name for the Opentalk server classPackage - the package to contain the class definitionName Space - the name space to contain the class definitionWsdl schema section:Service name - the Wsdl <service> element namePort name - the port name, same as the service class nameAddress - the port access point URL, including the port number Documentation - a description for the port 'GenerateOpentalkSOAPclient = 'Generate Opentalk-SOAP client class'GenerateOpentalkSOAPserver = 'Generate Opentalk-SOAP server class'GenerateWsdlSchemaHelp = 'To generate a WSDL schema, check the Generate box and set the options, then click Next. The schema will be generated from the service class or theOpentalk server that provides a web service description. Schemas section.  Select one of the schema types:Wsdl schema - Generates a Wsdl schema.  A <service> element is included only if an Opentalk server class has been created.Wsdl schema with XML to object binding - Generates a schema including the <schemaBindings> section.XML to object binding - Generates only the <schemaBindings> section for a schema.Service interface - Generates the abstract description of web services operations that includes messages and port types.Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'GeneratingClasses = 'Generating classes....'GeneratingWsdlSchemas = 'Generating Wsdl schemas'Go = 'Go'Header = 'Header'HeaderIsMissing = 'Header is missing: <1s>'HeaderNotUnderstood = 'Header not understood'HeaderProcessorClass = 'Header Processor Class'Help = 'Help'help = 'Help'helpdotdotdot = 'Help...'HttpWsdlBindingNotFound = 'HTTP WSDL binding is not found at <1s>'imension = 'dimension:'ImportMayNotHaveSameNS = 'Import may not have the same namespace as its enclosing schema'in = 'in'including = 'including'IncludingSuperClass = 'Including super class'InOut = 'In/Out'InstanceDetails = 'Instance Details'InvalidURL = 'Invalid URL'IsMissingMandatoryValueFor = '<1s> is missing mandatory value for: <2s>'Item = 'Item'ItemType = 'Item type'KeyNotFound = 'Key <1s> not found'literal = 'literal'LoadingXMLToObjectHelp = 'To verify and load XML to Object binding, check the Validate and Load Binding box and click Next. The XML to Object Binding will be verified, loaded and registered into XMLObjectBinding registry. Destination section:Method - saves the schema to a class method with the specified name in the selected class.File out - saves the schema to an external text filePOST - posts the schema on the Http server using specified url'LoadSchemaHelp = 'This page specifies the Wsdl schema document from which to generate classes and class generation settings."Wsdl schema URL" section - Identify the schema either as an Http or file URL, by selecting the document from a UDDI registry (click Search UDDI registry), or from a file (click Browse file...). "Bind XML types to" sectionClasses - creates a Smalltalk class for each XML complex typeDictionaries - maps each XML complex type to a WebServices.Struct"Create" sectionOpentalk clients - generates clients classes for issuing requests via an Opentalk Request BrokerWsdl clients - generates client classes for issuing requests via an HttpClientCreate server named: - Check this box and enter a class name to generate an Opentalk server for this schemaCreate service classes - Check this box to create a stub class and methods to implement the service described by the schema.'LoadSchemaSettingsHelp = 'Package - the package where client, server, service and binding classes will be created.Name Space - the Smalltalk name space where client, server, service and binding classes will be created. 'LoadWsdlSchema = 'Load Wsdl schema 'MaxOccurs = 'maxOccurs'MEP = 'Message Exchange Pattern'MEPHelpText = 'The default message exchange pattern to use for the exchange of messages between SOAP nodes (either "request-response" or "one-way").'Method = 'Method'MethodGeneratedByWSTool = '"This method was generated by Web Services Tool."'MinOccurs = 'minOccurs:'MismatchNumberOfPartsAndArg = 'Mismatch number of parts  and arguments'MissedRestrictionValue = 'Missed restriction value 'MissingHeaderInRequest = 'Missing header in request: <1s>'MultipleKeyRefsAreNotAllowed = 'Multliple key refs are not allowed'Name = 'Name'NameAlreadyExist = '<1s> already exists and is not a NameSpace'NameC = 'Name:'NeedKeyForCashedData = 'Need key for cached data element'NewName = 'New Name'NewOperationHeaderHelp = 'The dialog creates a new Header Processor class. The Header Processor holds the Soap header node description and methods to process the Soap header by the Opentalk server and client.Name - the Header Processor class namePackage - the package where the Header Processor class will be created.Name Space - the Smalltalk name space where the Header Processor class will be created. SOAP HeaderType - the Smalltalk class that the SOAP header node is mapped toXML Node - the soap:header element node as it will be transmitted inside the Header element of the SOAP Envelope. Exceptions list defines headerfault elements which appear inside the soap:header element. The headerfault elements are used to transmit error information pertaining to the header .Buttons:- Add - creates and adds new Exception Processor for the Header Processor- Remove - removes the Exception Processor from the Header Processor.When the Header Processor  is created the header type and exception information is in class methods:#headerTag -  the soap:header element tag#header - holds information about Smalltalk type and header exceptions 'NextX = 'Next >'NillableDefault = 'Use true as nillable default'nillableDefaultHelpText = 'This option allows to change the XML schema default for nillable attribute. By default a schema element is always described with the nillable="false" attribute. If an object with nil value and nillable="false" description is encoded the MissingValueNotification exception will be raised. Objects with nil values will be encoded only when they described with nillable="true" attribute.'NilValueNotAllowed = 'There is a nil value for the element that has being described with nillable="false" 'NoBaseTypeSpecified = 'No base type specified'NoBindingForNS = 'No binding defined for namespace: <1s>'NoBindingSelection = 'No binding selection!'NoBusinessSelection = 'No business selection!'NoDefinedMarshalerForNodeTag = 'There is no defined marshaler for the node tag: <1s>'NoDefinedOperationFor = 'No defined operation for <1s>'NoHoldingFoundWithAcquisitionNumber = 'No holding found with acquisition number <1s>.'NoKnownUDDIPortAt = 'No known UDDI port at <1s>'NoMarshalerFor = 'No marshaler for: <1s>'NoMarshalerForCollection = 'No element marshaler for collection'NoOperationBindingFor1s = 'No operation binding for <1s>'NoOverviewDetailsStored = 'No overview details stored.'NoPortBindingProvided = 'No port binding provided'NoPortPragmaDescription = 'The class doesn''t have port pragma description'NoSelection = 'No selection!'NoServiceSelection = 'No service selection!'NoServiceSpecified = 'No service specified'NoSpecifiedNamespace = 'No specified namespace for:<1s>'NoSuchBinding = 'No such binding:<1s>'NoSuchBindingAtTNS = 'No such binding at target namespace:<1s>'NoSuchInterface = 'No such interface: <1s>'NoSuchTypeInNS = 'No such type: <1s> in namespace: <2s>'NotChangeAccessors = 'Use unchanged schema name'NotFoundServiceClass = 'No found service class: <1s> in the Opentalk server'NotImplemented = 'Not implemented.'NotImplementedYet = 'Not implemented yet: <1s>'NotSupportedDoubleRepresentation = 'The double representation "<1s>" not supported yet'NotUseExistingNames = 'Create a new unique class name'NotYetImplemented = 'Not yet implemented'ObjectNotDictionaryOrStruct = 'The object is not a Dictionary or Struct type: <1s>'ObjectNotIdentityDictionary = 'The object is not an IdentityDictionary type: <1s>'OK = 'OK'oneway = 'one-way'OpentalkClients = 'Opentalk clients'Operation1sIsNotDefined = 'Operation <1s> is not defined'OperationDescription = 'Operation Description'OperationNameIsNotUnique = 'The operation name #<1s> is not unique. Overloaded operations are not supported'OverviewURL = 'Overview URL'Parameters = 'Parameters: 'Part = 'Part'PartCantResolveRef = 'Part %<<1s>%>  of operation %<<2s>%>  can not resolve reference:  <3s>'PartHasNoTypeInfo = 'Part <1s> of operation <2s> has no type information'Password = 'Password'PleaseTypeAFileName = 'Please type a file name: 'Port = 'Port 'PortIsNotProvided = 'Port is not provided!'PortsList = ' ports ='PortTypeOperations = 'Port Type operations'POST = 'POST url'PrivideClientClassName = '\Please, provide the client class name:'Processor = 'Processor'ProcessorName = 'Processor Name'ProvidesBusinessServiceInfoHelp = 'Provides information about business services and contacts. Select a service and press Next for the service details'qualified = 'qualified'RaiseMissingValueException = 'Always raise missing value exception'RaiseMissingValueExceptionHelpText = 'Setting this option to true will allow raising MissingValueSignal while marshaling the nil value even if the value is defined as optional (minOccurs=0). The default is false and the exception will be raised only for mandatory values (minOccurs=1)'ReferencesHref = 'References: <1s>'Registry = 'Registry:'Remove = 'Remove'RemoveException = 'Remove exception'RemoveHeaderProcessors = '&Remove Header Processor(s)'RemoveUnderscoresInAccessors = 'Convert underscores'requestresponse = 'request-response'RequestTimeout = 'Request Timeout'Required = 'Req'rpc = 'rpc'save = 'Save'SearchFor = 'Search for:'SearchingBusinessHelp = 'Searching for a business by the name or location. 1. Provide the registry URL2. Provide search criteria  and press  Go3. Select a business and press Next for information about the business services'SearchingWSUDDIRegistries = 'Searching Web Services in UDDI registries'SearchUDDI = 'Search UDDI'SearchUDDIRegistryForWS = 'Search the UDDI Registry for Web Services'Select = 'Select...'select = 'Select...'SelectExceptionClass = 'Select exception class'ServerClass = 'Server class'ServiceClass = 'Service class'ServiceDescription = 'Service Description'ServiceDetails = 'Service Details'ServiceDetailsHelp = 'Provides information about service bindings.'ServiceKey = 'Service Key'ServiceName = 'service name=<1s>'Services = 'Services'ServiceServerClientClasses = 'Service, Server and Client Classes'ServicesInvocation = '"Services invocation"'ServiceURL = 'Service URL'Settings = 'Settings...'settings = 'Settings...'SimpleType = 'Simple Type'Simpletype = 'Simple type'SmalltalkClassIsNotDefined = 'Smalltalk class <1s> is not defined'SmalltalkClassIsNotSpecified = 'Smalltalk class is not specified'SmalltalkWSDLBindingIsNotFound = 'Smalltalk WSDL binding is not found at <1s>'soap = 'soap'SoapBindingNotFound = 'SOAP Binding is not found at <1s>'SoapEncodingNotFound = 'SOAP Encoding binding is not found at <1s>'SOAPHeaderNotUnderstood = 'SOAP Header not understood'SoapNotUnderstoodBindingNotFound = 'SOAP Binding for not understood headers is not found at <1s>'SoapStyle = 'Style attribute'SoapStyleHelpText = 'Specifies the default SOAP message style (either "rpc" or "document").'SoapVersion = 'SOAP version'SoapVersionHelpText = 'The  currently supported SOAP version.'SoapWsdlBindingNotFound = 'SOAP WSDL binding is not found at <1s>'Source = 'Source...'SpecificationSignature = 'Specification signature'StartClient = '"Start the client"'StartServer = '"Start the server"'StartWsdlWizard = 'Start WS Wizard'StopClient = '"Stop the client"'StopServer = '"Stop the server"'StructType = 'Struct type'StructTypeDotDotDot = 'Struct type...'StyleAttribute = 'Style attribute'Tag = 'Tag'TargetNamespace = 'Target namespace'TestClientHelp = 'This page provides a workspace with scripts that invoke operations from the service provider. You will need to replace the parameter types with real values.'Testing = '"Testing  'TestingOpentalkserver = 'Testing Opentalk server'TestingWsdlClient = 'Testing Wsdl client'TestingX2OBinding = 'Testing XML To Object Binding'TestingXMLToObjectBinding = 'Testing XML To Object Binding'TestOpentalkServerClientScriptHelp = 'If you have created an Opentalk server and client, this page helps you to test the Web services. The script includes code that helps you to start the Opentalk-SOAP server and client and invoke operations from the service provider. You will need to replace the parameter types with real values.'TestX2OHelp = 'This page helps you to test the XML to Object Binding. The script marshals Smalltalk objects to XML document and unmarshals XML documents in to Smalltalk objects.'TheAmountOfEntriesInTheChoiceStruct = 'The amount of entries in the choice Struct is more than allowed by the schema maxOccurs value: <1s>'TheAttemptToObtainAuthKeyFailed = 'The attempt to obtain the authentication information failed'TheClassMustBeInheritedFromError = 'The class must be inherited from Error 'TheClassMustBeInheritedFromWSHeaderEntryProcessor = 'The class must be inherited from Opentalk.WSHeaderEntryProcessor 'TheHeaderNotDescribed = 'The header is not described. There is no #header method 'TheHeaderProcessors = 'The header processors'TheMarshalerHasBeingDefined = 'The marshaler for the <1s> node has being already defined.'ThePageCannotBeDisplayed = 'The page cannot be displayed'ThereIsNoBinding = 'There is no such binding: <1s>'ThereIsNoHeaderProcessorClass = 'There is no the header processor class'ThereIsNoOpentalkSOAPClientCreated = 'There is no  Opentalk-SOAP client  created'ThereIsNoOpentalkSOAPServerCreated = 'There is no  Opentalk-SOAP server  created'ThereIsNoPragmaDescriptionForOperations = 'There is no pragma description for operations in <1s>. Can not create the selector map'ThereIsNoQulifiedRef = 'There is no qualified reference for: <1s>'ThereIsNoServiceClass = 'There is no a service class'ThereIsNoSuchClass = 'There is no such class: <1s>'ThereIsNoSuchHeaderProcessor = 'There is no such header processor class: <1s> in: <2s>'ThereIsNoSuchMethod = 'There is no such method: <1s>'ThereIsNoSuchPortInRegistry = 'There is no such port <1s> in WsdlPort registry'ThereIsNoTModelSpecified = 'There is no tModel specified'ThereIsValueNilInCollection = 'There is the value nil in collection'TheWSDLSchemaOperationsHaveSOAPHeaders = '"The WSDL schema operations have SOAP headers. To process SOAP headers the wizard created the header processor classes.'TModelDescription = 'TModel Description'TModelHelp = 'Provides information about a Wsdl schema location'ToDebugClientServerEvaluate = '"To debug the client and server, evaluate:"'ToRunTheScriptYouHaveToAddImplementation = '"Before using this script, add correct implementation code to methods in the ''processing'' protocol.'ToStopAllRequestBrokers = '"To stop all Request Brokers, execute:"'ToUnmarshalUsedDefaultMarshaler = 'The element is not unmarshal'Type = 'Type'UDDIBindingNotFound = 'UDDI binding is not found at <1s>'UDDISchemaBindingNotFound = 'UDDI schema binding is not found at <1s>'UDDISearch = 'UDDI Search'UnexpectedQualifierInNode = 'Unexpected qualifier in <1s>'UnknownTransport1s = 'Unknown transport: <1s>'unqualified = 'unqualified'UnresolvedCtmType = 'Unresolved type: <1s>'UpdateClass = 'Update class'UpdateHeaderProcessor = 'Update HeaderProcessor'UpdateOpeartionHeaderHelp = 'The dialog allows updating the Header Processor class. Updating SOAP HeaderType - the Smalltalk class that the SOAP header node is mapped toXML Node - the soap:header element node as it will be transmitted inside the Header element of the SOAP Envelope. Exceptions - Add - creates and adds new Exception Processor for the Header Processor- Remove - removes the Exception Processor from the Header Processor.'URLIsNotSelected = 'URL is not selected!'UsageNotes = 'Usage notes'UseAttribute = 'Use attribute'UseEmptyLengthForDimension = 'Use empty dimension for encoding a Soap Array with nil value'UseEmptyLengthForDimensionHelpText = 'This option defines how to encode a Soap Array with the nil value. If the option is on a Soap Array with the nil value will be encoded using am empty dimension for the arrayType attribute. For example: <varArray SOAP-ENC:arrayType="ns1:string[]" xsi:nil="true" xsi:type="SOAP-ENC:Array">. The default option is false. In this case the Soap Array with the nil value will be encoded as <varArray xsi:nil="true"/>'UseExistingNames = 'Use the existing class name'UseInlineType = 'Encode nodes with inline type'UseInlineTypeHelpText = 'This option chooses whether or not to add the inline type to a node when a message is marshaled. For example: node with inline type <cost xsi:type="xsd:float">29.95</cost> 'UseMethodsInProtocol = 'Use methods in protocol'UseNilAttribute = 'Encode nil objects'UseNilAttributeHelpText = 'This option chooses whether or not to encode nil objects. The default is false which means that a nil object won''t be encoded or in other words the element will be skipped while writing XML. An object with nil value will be added to XML and encoded as: <address xsi:nil="true"/> 'UseOnlyServerMethods = 'Use only the service class methods'UsePart1InSelector = 'Use operation name and all message parts'UseReference = 'Use multi-reference encoding for identical objects'UseReferenceHelpText = 'This option chooses whether or not to use multi-reference encoding for identical objects (id/href attributes) which means that the only object will be encoded with some id attribute. The rest of the identical objects will be encoded as a reference (href) to this id. Choosing this option preserves object identity.For example, with the option on two accessors to the same string will appear, as follows:<greeting id="String-0">Hello</greeting><salutation href="#String-0"/>However, if the option is turned off, they will be encoded as two single-reference values as follows:<greeting>Hello</greeting><salutation>Hello</salutation>'username = 'User name'UseServerSuperMethods = 'Add the service super class methods'UseType = 'Use attribute'UseTypeHelpText = 'Specifies the default "use" attribute in the SOAP body binding description (either "literal" or "encoded").'UsingExistingName = 'If the class name to be created already exists:'utf8 = 'utf-8'ValidateAndLoadXMLToObjectBinding = 'Validate and Load XML To Object Binding'ValidateLoad = 'Validate and Load'ValidationFailedFor = 'Validation failed for: <1s>. <2s>'ValueHref = ' Value: <1s>'ViewSchema = 'View schema'ViewX2O = 'View X2O...'ViewXMLToObjectBinding = 'View XML To Object Binding'VWBindingBindingIsNotFound = 'VWBinding binding is not found at <1s>'WarningIn = 'Warning in:<1s>%>%><2s>'WebServices = 'Web services'WebServicesClassBuilder = 'Class Builder'WebServicesWizard = 'Web Services Wizard'WebServicesWorkspace = 'Web Services Workspace'WebServicesWsdlBuilder = 'Wsdl Builder'WebServicesWsdlBuilderSoapBinding = 'Soap Binding'WebServicesXMLSchemaBuilder = 'XML Schema Builder'WelcomeToWebServicesWizard = 'Welcome to the Web Services Wizard'welcomeToWsdlWizard = 'Welcome to the WSDL Wizard'WhileGeneratingClassSelectors = 'While generating service and client selectors:'WhileGeneratingClassSelectorsHelpText = 'Depending on this setting, the tool does the following:- If "Use operation name and all message parts" is selected, then the Wsdl Class Builder will generate the service and client class selectors as following: selector := operationNamePart1:part2:part3:.. For example: the BabelFish schema has operation name as #BabelFish and parts as #Translationmode and #Sourcedata. With this option on the selector will be created aClient>>babelFishTranslationmode:sourcedata:- If "Don''t use the first message part" is selected, selectors will be generated as following: selector := operationName:part2:part3:... This is the default option. For example: aClient>>babelFish:sourcedata: 'WhileGeneratingSchema = 'While generating the schema:'WhileGeneratingXMLSchemaTypes = 'While generating the XML schema types:'WrongCollectionSize = 'Wrong collection size'WrongEnumerationValue = 'Wrong enumeration value: <1s>'WrongMarshalerType = 'Wrong marshaler type'WrongObjectTypeForAspect = 'Wrong type for aspect: <1s>. Expected: <2s>. Received: <3s>'WrongObjectTypeForCollection = 'Wrong type for collection: <1s>.'WrongParameterOrXMLSchema = 'Wrong parameter or XML schema type'WrongTypeOfElementMarshaler = 'Wrong type of the element marshaler: <1s>. Expected RelationMarshaler'WrongURL = 'Wrong url:<1s>'WSDLBindingIsNotFound = 'WSDL Binding is not found at <1s>'WsdlClients = 'Wsdl clients'WsdlExtensionBindingNotFound = 'WSDL Extension Binding is not found at <1s>'WsdlOperation = 'Wsdl operation'WsdlSchemaSettings = 'Wsdl Schema Settings'WsdlSchemaSettingsHelp = 'Target namespace - the Wsdl schema target namespace attributeStyle attribute - either rpc or document styleUse attribute - either literal or encodedAdd selector attribute to the operation - When selected, the Wsdl schema will be generated with the "selector" attribute in the operation binding. This attribute is not a part of the Wsdl schema spec and some Wsdl processors may not support this attribute. If the schema will be used for an Opentalk server, this option should selected.'WsdlSchemaURL = 'Wsdl schema URL'WsdlSchemaURLContents = '\\Wsdl schema URL contents:\'WsdlServicePort = 'Wsdl service port'WsdlSetting = 'Wsdl Settings...'WsdlSettings = 'Wsdl Settings...'WSDLTargetNamespace = 'WSDL target namespace'WsdlWizardFinishingBlurbText = 'To generate another schema, click the Back button.To close the wizard, click Finish.'wsSoap0SoapVersion1_1 = '1.1'X2OBindingSettings = 'XML to Object Binding Settings'X2OBindingSettingstHelpText = 'Name:  XML to Object Binding name or XML schema nameDefault Element Form: The global XML schema attribute that indicates whether or not locally declared elements must be set to "qualified" or "unqualified."Default Attribute Form: The global XML schema attribute that indicates whether or not locally declared attributes must be set to "qualified" or "unqualified."Default Qualifier: The default qualifier will be used as a namespace qualifier for the binding elements and attributesDefault class namespace: The Smalltalk namespace where binding smalltalkClass attributes will be resolved Allow marshaling derived types in relations: Setting this option to on will allow marshaling derived objects when a type is described with a superclass marshaler. The default option is false. An example:<object name="customer" ..><element name="address" ref="Address"/></object>The "Address" type  is the supeclass for USAddress and UKAddress classes. Setting the option to true (checked) will allow using instances of USAddress and UKAddress to provide value for the address type. Unmarshaling will return instances of USAddress or UKAddress. The option default is false (unchecked) and requires providing the instance of the Address class as a value. Unmarshaling will return instances of the Address class.'XMLAttribute = 'XML attribute'XMLEncoding = 'XML encoding'XMLEncodingHelpText = 'Specifies the default XML document encoding'XMLNode = 'XML Node'XMLNodeIsDefinedOnTheNamespaceDiff = ' XML node is defined on the namespace different than the XML Schema targetNamespace.'XMLNodeIsInTheHeader = 'The XML Node <1s> is already in the header. Do you want to replace it?'XMLObjectMapping = 'XMLSchema Mapping'XMLObjectMarshaling = 'XMLObject Marshaling'XMLSchemaTargetNamespace = 'XML Schema targetNamespace'XMLSourceMissingMandatoryNode = 'Complex type: <1s> is missing mandatory node: <2s>'XMLToObjectBinding = 'XML to object binding'XMLToSmalltalkObjectBinding = 'XML To Smalltalk Object Binding'XsdBindingBindingIsNotFound = 'XsdBinding binding is not found at <1s>'YouAreGoingToLoseUnresolved = 'You are going to lose unresolved types for class: <1s>'YouNeedToObtainAuthKey = 'You need to obtain an authentication token. Use #getAuthTokenFor:credential:'